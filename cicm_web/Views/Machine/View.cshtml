@{
    /******************************************************************************
// Canary Islands Computer Museum Website
// ----------------------------------------------------------------------------
//
// Filename       : Index.cshtml
// Author(s)      : Natalia Portillo <claunia@claunia.com>
//
// --[ Description ] ----------------------------------------------------------
//
//     Index page (and news)
//
// --[ License ] --------------------------------------------------------------
//
//     This program is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as
//     published by the Free Software Foundation, either version 3 of the
//     License, or (at your option) any later version.
//
//     This program is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// ----------------------------------------------------------------------------
// Copyright © 2003-2018 Natalia Portillo
*******************************************************************************/

    ViewData["Title"] = "Computer";
}
@using System.IO
@model Machine

<p align=center>
    @if(Model.Company.LastLogo != null && File.Exists(System.IO.Path.Combine(ViewBag.WebRootPath, "assets/logos", Model.Company.LastLogo.Guid + ".svg")))
    {
        <picture>
            <source type="image/svg+xml"
                    srcset="/assets/logos/@(Model.Company.LastLogo.Guid).svg">
            <source type="image/webp"
                    srcset="/assets/logos/webp/1x/@(Model.Company.LastLogo.Guid).webp,
    /assets/logos/webp/1x/@(Model.Company.LastLogo.Guid).webp 2x,
    /assets/logos/webp/1x/@(Model.Company.LastLogo.Guid).webp 3x">
            <img srcset="/assets/logos/png/1x/@(Model.Company.LastLogo.Guid).png,
                             /assets/logos/png/1x/@(Model.Company.LastLogo.Guid).png 2x,
                             /assets/logos/png/1x/@(Model.Company.LastLogo.Guid).webp 3x"
                 src="/assets/logos/png/1x@(Model.Company.LastLogo.Guid).png")
                 alt=""
                 height="auto"
                 width="auto"
                 style="max-height: 256px; max-width: 256px" />
        </picture>
    }
</p>

@if(Model.Year == 1000)
{
    <b>
        <div style="text-align: center;">PROTOTYPE</div>
    </b>
}

<b>
    <a asp-controller=Company
       asp-action=View
       asp-route-id=@Model.Company.Id>
        @Model.Company.Name</a> @Model.Model</b>
<table width=100%>

@if(Model.Year != 1000)
{
    <tr>
        <th scope=row
            width="37%">
            <div align=right>
                Year
            </div>
        </th>
        <td width="63%">
            <a asp-controller="Computer"
               asp-action="ByYear"
               asp-route-id="@Model.Year">
                @Model.Year</a>
        </td>
    </tr>
}
@if(Model.Processors != null && Model.Processors.Length > 0)
{
    <tr>
    <th scope=row>
        <div align=right>
            Processors
        </div>
    </th>
    <td>
    <table>
    @for(int i = 0; i < Model.Processors.Length; i++)
    {
        if(Model.Processors[i] != null)
        {
            <tr>
            <td>
            @if(Model.Processors[i].Speed > 0) { @(Model.Processors[i].Processor.GprSize > 0 ? $"{Model.Processors[i].Processor.Name} @ {Model.Processors[i].Speed}Mhz ({Model.Processors[i].Processor.GprSize} bits)" : $"{Model.Processors[i].Processor.Name} @ {Model.Processors[i].Speed}Mhz") }
            else
            { @($"{Model.Processors[i].Processor.Name}") }
            <a aria-controls="@($"cpuInfo{i}")"
               aria-expanded="false"
               class="btn btn-link"
               data-toggle="collapse"
               href="@($"#cpuInfo{i}")">
                +info
            </a>
            <div class="collapse"
                 id="@($"cpuInfo{i}")">
            <div class="card card-body">
            <table>
            @if(Model.Processors[i].Processor.ModelCode != null && Model.Processors[i].Processor.ModelCode != Model.Processors[i].Processor.Name)
            {
                <tr>
                    <td>Model</td>
                    <td>@Model.Processors[i].Processor.ModelCode</td>
                </tr>
            }
            <tr>
                <td>Manufacturer</td>
                <td>
                    <a asp-controller=Company
                       asp-action=View
                       asp-route-id=@Model.Processors[i].Processor.Company.Id>
                        @Model.Processors[i].Processor.Company.Name</a>
                </td>
            </tr>
            @if(Model.Processors[i].Processor.Introduced != DateTime.MinValue)
            {
                <tr>
                    <td>Introduction date</td>
                    <td>@($"{Model.Processors[i].Processor.Introduced:yyyy}")</td>
                </tr>
            }
            @if(Model.Processors[i].Processor.InstructionSet != null)
            {
                <tr>
                    <td>Instruction set</td>
                    <td>@Model.Processors[i].Processor.InstructionSet.Name</td>
                </tr>
            }
            @if(Model.Processors[i].Processor.Speed > 0)
            {
                <tr>
                    <td>Nominal speed</td>
                    <td>@Model.Processors[i].Processor.Speed MHz</td>
                </tr>
            }
            @if(Model.Processors[i].Processor.Gpr > 0 || Model.Processors[i].Processor.Fpr > 0 || Model.Processors[i].Processor.Simd > 0)
            {
                <tr>
                    <td>Registers</td>
                    <td>
                        <table>
                            @if(Model.Processors[i].Processor.Gpr > 0)
                            {
                                <tr>
                                    <td>
                                        @Model.Processors[i].Processor.Gpr general purpose registers of @Model.Processors[i].Processor.GprSize bits
                                        @if(Model.Processors[i].Processor.FprSize > 0 && Model.Processors[i].Processor.Fpr == 0) { @($", that can be used as floating point registers of {Model.Processors[i].Processor.FprSize}") }
                                        @if(Model.Processors[i].Processor.SimdSize > 0 && Model.Processors[i].Processor.Simd == 0) { @($", that can be used as SIMD registers of {Model.Processors[i].Processor.FprSize}") }
                                    </td>
                                </tr>
                            }
                            @if(Model.Processors[i].Processor.Fpr > 0)
                            {
                                <tr>
                                    <td>
                                        @Model.Processors[i].Processor.Fpr floating-point registers of @Model.Processors[i].Processor.FprSize bits
                                        @if(Model.Processors[i].Processor.SimdSize > 0 && Model.Processors[i].Processor.Simd == 0) { @($", that can be used as SIMD registers of {Model.Processors[i].Processor.FprSize}") }
                                    </td>
                                </tr>
                            }
                            @if(Model.Processors[i].Processor.Simd > 0)
                            {
                                <tr>
                                    <td>
                                        @Model.Processors[i].Processor.Simd <abbr title="Single instruction, multiple data">SIMD</abbr>registers of @Model.Processors[i].Processor.SimdSize bits
                                    </td>
                                </tr>
                            }
                        </table>
                    </td>
                </tr>
            }
            @if(Model.Processors[i].Processor.Cores > 1)
            {
                <tr>
                    <td>Multi-core</td>
                    <td>@Model.Processors[i].Processor.Cores cores</td>
                </tr>
            }
            @if(Model.Processors[i].Processor.Cores > 1)
            {
                <tr>
                    <td>
                        <abbr title="Simultanoeus multithreading">SMT</abbr>
                    </td>
                    <td>
                        @Model.Processors[i].Processor.ThreadsPerCore threads
                        @if(Model.Processors[i].Processor.Cores > 1) { @(" per core") }
                    </td>
                </tr>
            }
            @if(Model.Processors[i].Processor.DataBus > 0 || Model.Processors[i].Processor.AddressBus > 0)
            {
                <tr>
                    <td>Bus</td>
                    <td>
                        <table>
                            @if(Model.Processors[i].Processor.DataBus > 0)
                            {
                                <tr>
                                    <td>
                                        @Model.Processors[i].Processor.DataBus-bit data
                                    </td>
                                </tr>
                            }
                            @if(Model.Processors[i].Processor.AddressBus > 0)
                            {
                                <tr>
                                    <td>
                                        @Model.Processors[i].Processor.AddressBus-bit address
                                    </td>
                                </tr>
                            }
                        </table>
                    </td>
                </tr>
            }

            @if(Model.Processors[i].Processor.L1Instruction > 0 || Model.Processors[i].Processor.L1Data > 0 || Model.Processors[i].Processor.L2 > 0 || Model.Processors[i].Processor.L2 > 0)
            {
                <tr>
                    <td>Cache</td>
                    <td>
                        <table>
                            @if(Model.Processors[i].Processor.L1Instruction > 0)
                            {
                                <tr>
                                    <td>
                                        @(Model.Processors[i].Processor.L1Data < 0 ? $"{Model.Processors[i].Processor.L1Instruction}KiB combined instruction-data L1" : $"{Model.Processors[i].Processor.L1Instruction}KiB instruction L1")
                                    </td>
                                </tr>
                            }
                            @if(Model.Processors[i].Processor.L1Data > 0)
                            {
                                <tr>
                                    <td>
                                        @($"{Model.Processors[i].Processor.L1Data}KiB data L1")
                                    </td>
                                </tr>
                            }
                            @if(Model.Processors[i].Processor.L2 > 0)
                            {
                                <tr>
                                    <td>
                                        @($"{Model.Processors[i].Processor.L2}KiB L2")
                                    </td>
                                </tr>
                            }
                            @if(Model.Processors[i].Processor.L3 > 0)
                            {
                                <tr>
                                    <td>
                                        @($"{Model.Processors[i].Processor.L3}KiB L3")
                                    </td>
                                </tr>
                            }
                        </table>
                    </td>
                </tr>
            }
            @if(Model.Processors[i].Processor.Package != null)
            {
                <tr>
                    <td>Package</td>
                    <td>@Model.Processors[i].Processor.Package</td>
                </tr>
            }
            @if(Model.Processors[i].Processor.Process != null || Model.Processors[i].Processor.ProcessNm > 0)
            {
                <tr>
                    <td>Manufacturing process</td>
                    <td>
                        @if(Model.Processors[i].Processor.Process != null && Model.Processors[i].Processor.ProcessNm > 0)
                        {
                            @Model.Processors[i].Processor.Process
                            @("@")
                            @(Model.Processors[i].Processor.ProcessNm > 100 ? $"{Model.Processors[i].Processor.ProcessNm / 100}µm" : $"{Model.Processors[i].Processor.ProcessNm}nm")
                        }
                        else if(Model.Processors[i].Processor.ProcessNm > 0) { @(Model.Processors[i].Processor.ProcessNm > 100 ? $"{Model.Processors[i].Processor.ProcessNm / 100}µm" : $"{Model.Processors[i].Processor.ProcessNm}nm") }
                        else
                        { @Model.Processors[i].Processor.Process }
                    </td>
                </tr>
            }
            @if(Model.Processors[i].Processor.DieSize > 0)
            {
                <tr>
                    <td>Die size</td>
                    <td>@Model.Processors[i].Processor.DieSize mm&sup2;</td>
                </tr>
            }
            @if(Model.Processors[i].Processor.Transistors > 0)
            {
                <tr>
                    <td>Transistors</td>
                    <td>@Model.Processors[i].Processor.Transistors</td>
                </tr>
            }
            </table>
            </div>
            </div>
            </td>

            </tr>
        }
    }
    </table>
    </td>
    </tr>
}
<tr>
    <th scope=row>
        <div align=right>
            Base RAM memory
        </div>
    </th>
    @if(Model.Ram > 1024)
    {
        if(Model.Ram > 1048576)
        {
            <td>@($"{Model.Ram / 1048576}") Gbytes</td>
        }
        else
        {
            <td>@($"{Model.Ram / 1024}") Mbytes</td>
        }
    }
    else
    {
        if(Model.Ram == 0)
        {
            <td>Unknown data</td>
        }
        else
        {
            <td>@Model.Ram Kbytes</td>
        }
    }
</tr>
<tr>
    <th scope=row>
        <div align=right>
            ROM
        </div>
    </th>
    @if(Model.Rom > 1024)
    {
        if(Model.Rom > 1048576)
        {
            <td>@($"{Model.Rom / 1048576}") Gbytes</td>
        }
        else
        {
            <td>@($"{Model.Rom / 1024}") Mbytes</td>
        }
    }
    else
    {
        if(Model.Rom == 0)
        {
            <td>Unknown data</td>
        }
        else
        {
            <td>@Model.Rom Kbytes</td>
        }
    }
</tr>
@if(Model.Gpu == null || Model.Gpu != null && Model.Gpu.Id != -1)
{
    <tr>
        <th scope=row>
            <div align=right>
                Graphics processor
            </div>
        </th>

        @if(Model.Gpu != null)
        {
            if(Model.Gpu.Id == -2)
            {
                <td>
                    Framebuffer
                    <a aria-controls="gpuInfo"
                       aria-expanded="false"
                       class="btn btn-link"
                       data-toggle="collapse"
                       href="#gpuInfo">
                        +info
                    </a>
                    <div class="collapse"
                         id="gpuInfo">
                        <div class="card card-body">
                            This computer directly draws pixels from software to a memory region that's converted to video output by a <abbr title="Digital to Analog Converter">DAC</abbr> or similar without using any specific graphics processing unit.
                        </div>
                    </div>
                </td>
            }
            else
            {
                <td>
                    @($"{Model.Gpu.Name}")
                    <a aria-controls="gpuInfo"
                       aria-expanded="false"
                       class="btn btn-link"
                       data-toggle="collapse"
                       href="#gpuInfo">
                        +info
                    </a>
                    <div class="collapse"
                         id="gpuInfo">
                        <div class="card card-body">
                            <table>
                                @if(Model.Gpu.ModelCode != null && Model.Gpu.ModelCode != Model.Gpu.Name)
                                {
                                    <tr>
                                        <td>Model</td>
                                        <td>@Model.Gpu.ModelCode</td>
                                    </tr>
                                }
                                <tr>
                                    <td>Manufacturer</td>
                                    <td>
                                        <a asp-controller=Company
                                           asp-action=View
                                           asp-route-id=@Model.Gpu.Company.Id>
                                            @Model.Gpu.Company.Name</a>
                                    </td>
                                </tr>
                                @if(Model.Gpu.Introduced != DateTime.MinValue)
                                {
                                    <tr>
                                        <td>Introduction date</td>
                                        <td>@($"{Model.Gpu.Introduced:yyyy}")</td>
                                    </tr>
                                }
                                @if(Model.Gpu.Package != null)
                                {
                                    <tr>
                                        <td>Package</td>
                                        <td>@Model.Gpu.Package</td>
                                    </tr>
                                }
                                @if(Model.Gpu.Process != null || Model.Gpu.ProcessNm > 0)
                                {
                                    <tr>
                                        <td>Manufacturing process</td>
                                        <td>
                                            @if(Model.Gpu.Process != null && Model.Gpu.ProcessNm > 0)
                                            {
                                                @Model.Gpu.Process
                                                @("@")
                                                @(Model.Gpu.ProcessNm > 100 ? $"{Model.Gpu.ProcessNm / 100}µm" : $"{Model.Gpu.ProcessNm}nm")
                                            }
                                            else if(Model.Gpu.ProcessNm > 0) { @(Model.Gpu.ProcessNm > 100 ? $"{Model.Gpu.ProcessNm / 100}µm" : $"{Model.Gpu.ProcessNm}nm") }
                                            else
                                            { @Model.Gpu.Process }
                                        </td>
                                    </tr>
                                }
                                @if(Model.Gpu.DieSize > 0)
                                {
                                    <tr>
                                        <td>Die size</td>
                                        <td>@Model.Gpu.DieSize mm&sup2;</td>
                                    </tr>
                                }
                                @if(Model.Gpu.Transistors > 0)
                                {
                                    <tr>
                                        <td>Transistors</td>
                                        <td>@Model.Gpu.Transistors</td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </td>
            }
        }
        else
        {
            <td>Unknown data</td>
        }
    </tr>
}
<tr>
    <th scope=row>
        <div align=right>
            Video memory
        </div>
    </th>
    @if(Model.Vram > 1024)
    {
        if(Model.Vram > 1048576)
        {
            <td>@($"{Model.Vram / 1048576}") Gbytes</td>
        }
        else
        {
            <td>@($"{Model.Vram / 1024}") Mbytes</td>
        }
    }
    else
    {
        if(Model.Vram == 0)
        {
            <td>Unknown data</td>
        }
        else
        {
            <td>@Model.Vram Kbytes</td>
        }
    }
</tr>
<tr>
    <th scope=row>
        <div align=right>
            Video resolution
        </div>
    </th>
    @if(Model.Resolution != "???")
    {
        <td>@Model.Resolution</td>
    }
    else
    {
        <td>Unknown data</td>
    }
</tr>
<tr>
    <th scope=row>
        <div align=right>
            Colors
        </div>
    </th>

    @if(Model.Colors > 0)
    {
        <td>@Model.Colors</td>
    }
    else
    {
        <td>Unknown data</td>
    }
</tr>
<tr>
    <th scope=row>
        <div align=right>
            Sound processor
        </div>
    </th>
    @if(Model.SoundSynth.Id > 1)
    {
        if(Model.SoundSynth.Id > 2)
        {
            if(Model.SoundChannels > 0)
            {
                <td>@Model.SoundSynth.Name (@Model.SoundChannels channels)</td>
            }
            else
            {
                <td>@Model.SoundSynth.Name</td>
            }
        }
        else
        {
            <td>Unknown data</td>
        }
    }
    else
    { <td>None</td> }
</tr>
<tr>
    <th scope=row>
        <div align=right>
            Music synthetizer
        </div>
    </th>
    @if(Model.MusicSynth.Id > 1)
    {
        if(Model.MusicSynth.Id > 2)
        {
            if(Model.MusicChannels > 0)
            {
                <td>@Model.MusicSynth.Name (@Model.MusicChannels channels)</td>
            }
            else
            {
                <td>@Model.MusicSynth.Name</td>
            }
        }
        else
        {
            <td>Unknown data</td>
        }
    }
    else
    { <td>None</td> }
</tr>
@if(Model.Hdd1 != null && Model.Hdd1.Id > 0 && Model.Hdd1.Id != 30)
{
    <tr>
        <th scope=row>
            <div align=right>
                Disk interfaces
            </div>
        </th>
        <td>
            @Model.Hdd1.Description
            @if(Model.Hdd2 != null && Model.Hdd2.Id > 0 && Model.Hdd2.Id != 30)
            {
                <br>
                @Model.Hdd2.Description
            }
            @if(Model.Hdd3 != null && Model.Hdd3.Id > 0 && Model.Hdd3.Id != 30)
            {
                <br>
                @Model.Hdd3.Description
            }
        </td>
    </tr>
}

@if(Model.Disk1 != null)
{
    <tr>
        <th scope=row>
            <div align=right>
                Primary disk
            </div>
        </th>
        @if(Model.Disk1.Id != 30)
        {
            int cap1 = int.Parse(Model.Cap1);

            if(Model.Disk1.Id != 8)
            {
                if(Model.Disk1.Id != 6)
                {
                    string cap1Bytes = cap1 > 1024 ? (cap1 > 1048576 ? $"{cap1 / 1048576} GBytes" : $"{cap1 / 1024} MBytes") : (cap1 > 0 ? $"{cap1} Kbytes" : "Unknown capacity");

                    if(Model.Disk1.Id != 10)
                    {
                        if(Model.Disk1.Id != 15)
                        {
                            if(Model.Disk1.Id != 16)
                            {
                                if(Model.Disk1.Id != 36)
                                {
                                    if(Model.Disk1.Id != 22)
                                    {
                                        if(Model.Disk1.Id != 23)
                                        {
                                            if(Model.Disk1.Id != 39)
                                            {
                                                if(Model.Disk1.Id != 31)
                                                {
                                                    <td>@Model.Disk1.Description (@cap1Bytes)</td>
                                                }
                                                else
                                                {
                                                    <td>Propietary (@cap1Bytes)</td>
                                                }
                                            }
                                            else
                                            {
                                                <td>Digital tape (@cap1Bytes)</td>
                                            }
                                        }
                                        else
                                        {
                                            <td>Punched card (@cap1Bytes)</td>
                                        }
                                    }
                                    else
                                    {
                                        <td>Chip card (@cap1Bytes)</td>
                                    }
                                }
                                else
                                {
                                    <td>Magnetic card (@cap1Bytes)</td>
                                }
                            }
                            else
                            {
                                <td>Memory (@cap1Bytes)</td>
                            }
                        }
                        else
                        {
                            <td>Magneto-optical (@cap1Bytes)</td>
                        }
                    }
                    else
                    {
                        <td>Optical disk (@cap1Bytes)</td>
                    }
                }
                else
                {
                    string cap1Bits = cap1 > 1000 ? (cap1 > 1000000 ? $"{cap1 / 1000000} GBits" : $"{cap1 / 1000} MBits") : (cap1 > 0 ? $"{cap1} KBits" : "Unknown capacity");

                    <td>Cartridge (@cap1Bits)</td>
                }
            }
            else
            {
                <td>Standard audio cassette (@cap1 bps)</td>
            }
        }
        else
        { <td>None</td> }
    </tr>
}
@if(Model.Disk2 != null)
{
    <tr>
        <th scope=row>
            <div align=right>
                Secondary disk
            </div>
        </th>
        @if(Model.Disk2.Id != 30)
        {
            int cap2 = int.Parse(Model.Cap2);

            if(Model.Disk2.Id != 8)
            {
                if(Model.Disk2.Id != 6)
                {
                    string cap2Bytes = cap2 > 1024 ? (cap2 > 1048576 ? $"{cap2 / 1048576} GBytes" : $"{cap2 / 1024} MBytes") : (cap2 > 0 ? $"{cap2} Kbytes" : "Unknown capacity");

                    if(Model.Disk2.Id != 10)
                    {
                        if(Model.Disk2.Id != 15)
                        {
                            if(Model.Disk2.Id != 16)
                            {
                                if(Model.Disk2.Id != 36)
                                {
                                    if(Model.Disk2.Id != 22)
                                    {
                                        if(Model.Disk2.Id != 23)
                                        {
                                            if(Model.Disk2.Id != 39)
                                            {
                                                if(Model.Disk2.Id != 31)
                                                {
                                                    <td>@Model.Disk2.Description (@cap2Bytes)</td>
                                                }
                                                else
                                                {
                                                    <td>Propietary (@cap2Bytes)</td>
                                                }
                                            }
                                            else
                                            {
                                                <td>Digital tape (@cap2Bytes)</td>
                                            }
                                        }
                                        else
                                        {
                                            <td>Punched card (@cap2Bytes)</td>
                                        }
                                    }
                                    else
                                    {
                                        <td>Chip card (@cap2Bytes)</td>
                                    }
                                }
                                else
                                {
                                    <td>Magnetic card (@cap2Bytes)</td>
                                }
                            }
                            else
                            {
                                <td>Memory (@cap2Bytes)</td>
                            }
                        }
                        else
                        {
                            <td>Magneto-optical (@cap2Bytes)</td>
                        }
                    }
                    else
                    {
                        <td>Optical disk (@cap2Bytes)</td>
                    }
                }
                else
                {
                    string cap2Bits = cap2 > 1000 ? (cap2 > 1000000 ? $"{cap2 / 1000000} GBits" : $"{cap2 / 1000} MBits") : (cap2 > 0 ? $"{cap2} KBits" : "Unknown capacity");

                    <td>Cartridge (@cap2Bits)</td>
                }
            }
            else
            {
                <td>Standard audio cassette (@cap2 bps)</td>
            }
        }
        else
        { <td>None</td> }
    </tr>
}
</table>

@if(File.Exists(System.IO.Path.Combine(ViewBag.WebRootPath, "assets/photos/computers", Model.Id + ".jpg")))
{
    <img src="@System.IO.Path.Combine("/assets/photos/computers", Model.Id + ".jpg")"
         alt="">
}
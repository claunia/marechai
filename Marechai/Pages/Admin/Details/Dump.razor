@{
/******************************************************************************
// MARECHAI: Master repository of computing history artifacts information
// ----------------------------------------------------------------------------
//
// Author(s)      : Natalia Portillo <claunia@claunia.com>
//
// --[ License ] --------------------------------------------------------------
//
//     This program is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as
//     published by the Free Software Foundation, either version 3 of the
//     License, or (at your option) any later version.
//
//     This program is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// ----------------------------------------------------------------------------
// Copyright Â© 2003-2020 Natalia Portillo
*******************************************************************************/
}

@page "/admin/dumps/details/{Id:long}"
@page "/admin/dumps/edit/{Id:long}"
@page "/admin/dumps/create"
@using Marechai.Database
@using Marechai.Database.Models
@inherits OwningComponentBase<DumpsService>
@inject IStringLocalizer<DumpsService> L
@inject MediaService MediaService
@inject NavigationManager NavigationManager
@inject IWebHostEnvironment Host
@inject IJSRuntime JSRuntime
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "UberAdmin, Admin")]


<h3>@L["Dump details"]</h3>
<hr />

@if (!_loaded)
{
    <p align="center">@L["Loading..."]</p>

    return;
}

<div>
    <Field>
        <FieldLabel>@L["Dumper"]</FieldLabel>
        <Validation Validator="@ValidateDumper">
            <TextEdit ReadOnly="!_editing" @bind-Text="@_model.Dumper">
                <Feedback>
                    <ValidationError>@L["Please enter a valid dumper."]</ValidationError>
                </Feedback>
            </TextEdit>
        </Validation>
    </Field>
    @if (_editing || _model.UserId != null)
    {
        <Field>
            <FieldLabel>@L["Dumper's user"]</FieldLabel>
            @if (_editing)
            {
                <Check TValue="bool" @bind-Checked="@_unknownUser">@L["Unknown (user)"]</Check>
            }
            @if (!_editing ||
                 !_unknownUser)
            {
                <Select Disabled="!_editing" TValue="string" @bind-SelectedValue="@_model.UserId">
                    @foreach (var user in _users)
                    {
                        <SelectItem TValue="string" Value="@user.Id">@user.UserName</SelectItem>
                    }
                </Select>
            }
        </Field>
    }
    @if (_editing || _model.DumpingGroup != null)
    {
        <Field>
            <FieldLabel>@L["Dumping group, or group whose guidelines where followed to make the dump"]</FieldLabel>
            @if (_editing)
            {
                <Check TValue="bool" @bind-Checked="@_unknownDumpingGroup">@L["Unknown (dumping group)"]</Check>
            }
            @if (!_editing ||
                 !_unknownDumpingGroup)
            {
                <Validation Validator="@ValidateDumpingGroup">
                    <TextEdit Disabled="!_editing" @bind-Text="@_model.DumpingGroup">
                        <Feedback>
                            <ValidationError>@L["Please enter a valid dumping group."]</ValidationError>
                        </Feedback>
                    </TextEdit>
                </Validation>
            }
        </Field>
    }
    @if (_editing || _model.DumpDate != null)
    {
        <Field>
            <FieldLabel>@L["Dump date"]</FieldLabel>
            @if (_editing)
            {
                <Check TValue="bool" @bind-Checked="@_unknownDumpDate">@L["Unknown (dump date)"]</Check>
            }
            @if (!_editing || !_unknownDumpDate)
            {
                <Validation Validator="@ValidateDumpDate">
                    <DateEdit TValue="DateTime?" ReadOnly="!_editing" @bind-Date="@_model.DumpDate" >
                        <Feedback>
                            <ValidationError>@L["Please enter a valid dump date."]</ValidationError>
                        </Feedback>
                    </DateEdit>
                </Validation>
            }
        </Field>
    }
    <Field>
        <FieldLabel>@L["Media"]</FieldLabel>
        <Select Disabled="!_editing" TValue="ulong" @bind-SelectedValue="@_model.MediaId">
            @foreach (var media in _medias)
            {
                <SelectItem TValue="ulong" Value="@media.Id">@media.Title</SelectItem>
            }
        </Select>
    </Field>
@{
    // TODO: Dump hardware
}
</div>
<div>
    @if (!_editing)
    {
        <Button Color="Color.Primary" Clicked="@OnEditClicked">@L["Edit"]</Button>
    }
    else
    {
        <Button Color="Color.Success" Clicked="@OnSaveClicked">@L["Save"]</Button>
        <Button Color="Color.Danger" Clicked="@OnCancelClicked">@L["Cancel"]</Button>
    }
    <a href="/admin/dumps" class="btn btn-secondary">@L["Back to list"]</a>
</div>

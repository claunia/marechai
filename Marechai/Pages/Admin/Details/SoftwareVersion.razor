@{
    /******************************************************************************
// MARECHAI: Master repository of computing history artifacts information
// ----------------------------------------------------------------------------
//
// Author(s)      : Natalia Portillo <claunia@claunia.com>
//
// --[ License ] --------------------------------------------------------------
//
//     This program is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as
//     published by the Free Software Foundation, either version 3 of the
//     License, or (at your option) any later version.
//
//     This program is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// ----------------------------------------------------------------------------
// Copyright Â© 2003-2020 Natalia Portillo
*******************************************************************************/
}

@page "/admin/software_versions/details/{Id:long}"
@page "/admin/software_versions/edit/{Id:long}"
@page "/admin/software_versions/create"
@using Marechai.Database.Models
@inherits OwningComponentBase<SoftwareVersionsService>
@inject IStringLocalizer<SoftwareVersionsService> L
@inject SoftwareFamiliesService SoftwareFamiliesService
@inject LicensesService LicensesService
@inject CompaniesService CompaniesService
@inject DocumentRolesService DocumentRolesService
@inject CompaniesBySoftwareVersionService CompaniesBySoftwareVersionService
@inject NavigationManager NavigationManager
@inject IWebHostEnvironment Host
@inject IJSRuntime JSRuntime
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "UberAdmin, Admin")]
<h3>@L["Software version details"]</h3>
<hr />
@if(!_loaded)
{
    <p align="center">@L["Loading..."]</p>

    return;
}
<div>
    <Field>
        <FieldLabel>@L["Software family"]</FieldLabel>
        <Select @bind-SelectedValue="@_model.FamilyId" Disabled="!_editing" @TValue="ulong">
            @foreach(var family in _softwareFamilies)
            {
                <SelectItem @TValue="ulong" Value="@family.Id">@family.Name</SelectItem>
}
        </Select>
    </Field>
    <Field>
        <FieldLabel>@L["Version"]</FieldLabel>
        <Validation Validator="@ValidateVersion">
            <TextEdit @bind-Text="@_model.Version" ReadOnly="!_editing">
                <Feedback>
                    <ValidationError>@L["Please enter a valid version."]</ValidationError>
                </Feedback>
            </TextEdit>
        </Validation>
    </Field>
    @if(_editing || _model.Name != null)
    {
        <Field>
            <FieldLabel>@L["Name, if different from family name"]</FieldLabel>
            @if(_editing)
            {
                <Check @bind-Checked="@_unknownName" @TValue="bool">@L["Unknown (name)"]</Check>
}
            @if(!_editing ||
                !_unknownName)
            {
                <Validation Validator="@ValidateName">
                    <TextEdit @bind-Text="@_model.Name" Disabled="!_editing">
                        <Feedback>
                            <ValidationError>@L["Please enter a valid name."]</ValidationError>
                        </Feedback>
                    </TextEdit>
                </Validation>
}
        </Field>
}
    @if(_editing || _model.Codename != null)
    {
        <Field>
            <FieldLabel>@L["Codename"]</FieldLabel>
            @if(_editing)
            {
                <Check @bind-Checked="@_unknownCodename" @TValue="bool">@L["Unknown (codename)"]</Check>
}
            @if(!_editing ||
                !_unknownCodename)
            {
                <Validation Validator="@ValidateCodename">
                    <TextEdit @bind-Text="@_model.Codename" Disabled="!_editing">
                        <Feedback>
                            <ValidationError>@L["Please enter a valid codename."]</ValidationError>
                        </Feedback>
                    </TextEdit>
                </Validation>
}
        </Field>
}
    @if(_editing || _model.Introduced != null)
    {
        <Field>
            <FieldLabel>@L["Introduced"]</FieldLabel>
            @if(_editing)
            {
                <Check @bind-Checked="@_unknownIntroduced" @TValue="bool">@L["Unknown (introduction date)"]</Check>
}
            @if(!_editing ||
                !_unknownIntroduced)
            {
                <Validation Validator="@ValidateIntroduced">
                    <DateEdit @bind-Date="@_model.Introduced" ReadOnly="!_editing" @TValue="DateTime?">
                        <Feedback>
                            <ValidationError>@L["Please enter a valid introduction date."]</ValidationError>
                        </Feedback>
                    </DateEdit>
                </Validation>
}
        </Field>
}
    @if(_editing || _model.LicenseId != null)
    {
        <Field>
            <FieldLabel>@L["License"]</FieldLabel>
            @if(_editing)
            {
                <Check @bind-Checked="@_unknownLicense" @TValue="bool">@L["Unknown (license)"]</Check>
}
            @if(!_editing ||
                !_unknownLicense)
            {
                <Select @bind-SelectedValue="@_model.LicenseId" Disabled="!_editing" @TValue="int?">
                    @foreach(var license in _licenses)
                    {
                        <SelectItem @TValue="int?" Value="@license.Id">@license.Name</SelectItem>
}
                </Select>
}
        </Field>
}
    @if(_editing || _model.PreviousId != null)
    {
        <Field>
            <FieldLabel>@L["Previous"]</FieldLabel>
            @if(_editing)
            {
                <Check @bind-Checked="@_unknownPrevious" @TValue="bool">@L["Unknown or none (previous version)"]</Check>
}
            @if(!_editing ||
                !_unknownPrevious)
            {
                <Select @bind-SelectedValue="@_model.PreviousId" Disabled="!_editing" @TValue="ulong?">
                    @foreach(var version in _softwareVersions)
                    {
                        <SelectItem @TValue="ulong?" Value="@version.Id">@version.Name ?? @version.Version</SelectItem>
}
                </Select>
}
        </Field>
}
</div>
<div>
    @if(!_editing)
    {
        <Button Clicked="@OnEditClicked" Color="Color.Primary">@L["Edit"]</Button>
}
    else
    {
        <Button Clicked="@OnSaveClicked" Color="Color.Success">@L["Save"]</Button>
        <Button Clicked="@OnCancelClicked" Color="Color.Danger">@L["Cancel"]</Button>
}
    <a class="btn btn-secondary" href="/admin/software_versions">@L["Back to list"]</a>
</div>
@if(!_editing)
{
    <hr />
    <h3>@L["Companies involved in this software version"]</h3>
    <Button Clicked="OnAddCompanyClick" Color="Color.Success" Disabled="_addingCompany">@L["Add new (company)"]</Button>
    @if(_addingCompany)
    {
        <div>
            <Field>
                <FieldLabel>@L["Company"]</FieldLabel>
                <Select @bind-SelectedValue="@_addingCompanyId" Disabled="_savingCompany" @TValue="int?">
                    @foreach(var company in _companies)
                    {
                        <SelectItem @TValue="int?" Value="@company.Id">@company.Name</SelectItem>
}
                </Select>
            </Field>
            <Field>
                <FieldLabel>@L["Role"]</FieldLabel>
                <Select @bind-SelectedValue="@_addingCompanyRoleId" Disabled="!_editing" @TValue="string">
                    @foreach(var role in _roles)
                    {
                        <SelectItem @TValue="string" Value="@role.Id">@role.Name</SelectItem>
}
                </Select>
            </Field>
            <Button Clicked="@CancelAddCompany" Color="Color.Primary" Disabled="@_savingCompany">@L["Cancel"]</Button>
            <Button Clicked="@ConfirmAddCompany" Color="Color.Success" Disabled="@_savingCompany">@L["Add"]</Button>
        </div>
    }
    @if(_softwareVersionCompanies?.Count > 0)
    {
        <div>
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>
                        @L["Company"]
                    </th>
                    <th>
                        @L["Role"]
                    </th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @foreach(var item in _softwareVersionCompanies)
                {
                    <tr>
                        <td>
                            @item.Company
                        </td>
                        <td>
                            @item.Role
                        </td>
                        <td>
                            <Button Clicked="() => {ShowCompanyDeleteModal(item.Id);}" Color="Color.Danger" Disabled="@_addingCompany">@L["Delete"]</Button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }

    <Modal Closing="@ModalClosing" IsCentered="true" ref="_frmDelete">
        <ModalBackdrop />
        <ModalContent Centered="true">
            <ModalHeader>
                <ModalTitle>@_deleteTitle</ModalTitle>
                <CloseButton Clicked="@HideModal" />
            </ModalHeader>
            <ModalBody>
                <Text>@_deleteText</Text>
            </ModalBody>
            <ModalFooter>
                <Button Clicked="@HideModal" Color="Color.Primary" Disabled="@_deleteInProgress">@L["Cancel"]</Button>
                <Button Clicked="@ConfirmDelete" Color="Color.Danger" Disabled="@_deleteInProgress">@L["Delete"]</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>}
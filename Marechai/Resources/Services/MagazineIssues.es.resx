<?xml version="1.0" encoding="utf-8"?>
<!-- ReSharper disable MarkupTextTypo -->
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Magazine issues" xml:space="preserve">
    <value>Números de revista</value>
  </data>
  <data name="Loading..." xml:space="preserve">
    <value>Cargando...</value>
  </data>
  <data name="Create new" xml:space="preserve">
    <value>Crear nuevo</value>
  </data>
  <data name="Magazine title" xml:space="preserve">
    <value>Título de la revista</value>
  </data>
  <data name="Published" xml:space="preserve">
    <value>Publicación</value>
  </data>
  <data name="Caption" xml:space="preserve">
    <value>Portada</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Detalles</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="Delete magazine issue" xml:space="preserve">
    <value>Eliminar número de revista</value>
  </data>
  <data name="Are you sure you want to delete the magazine issue published on {0} for magazine {1} with caption {2}?" xml:space="preserve">
    <value>¿Estás seguro de eliminar el número de la revista {1} publicado el {0} con la portada {2}?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Magazine issue details" xml:space="preserve">
    <value>Detalles de número de revista</value>
  </data>
  <data name="Magazine" xml:space="preserve">
    <value>Revista</value>
  </data>
  <data name="Caption using latin script" xml:space="preserve">
    <value>Portada usando escritura latina</value>
  </data>
  <data name="Please enter a valid caption." xml:space="preserve">
    <value>Por favor introduce un texto de portada válido.</value>
  </data>
  <data name="Native caption, that is, caption using native script (cyrillic, chinese, etc)" xml:space="preserve">
    <value>Portada nativa, es decir, el text de portada usando escritura nativa (cirílico, chino, etc)</value>
  </data>
  <data name="Unknown (native caption)" xml:space="preserve">
    <value>Desconocido</value>
  </data>
  <data name="Please enter a valid native caption." xml:space="preserve">
    <value>Por favor introduce un texto de portada nativo válido.</value>
  </data>
  <data name="Unknown (publication date)" xml:space="preserve">
    <value>Desconocida</value>
  </data>
  <data name="If the date of exact publication is unknown, set as first day of first month the publication applies to. E.g. July/August 1998 -&gt; 1st July 1998" xml:space="preserve">
    <value>Si la fecha exacta de la publicación es desconocida, poner como el primer día del mes al que se aplica la publicación. Ej.: Julio/Agosto 1998 -&gt; 1 de Agosto de 1998</value>
  </data>
  <data name="Please enter a valid publication date." xml:space="preserve">
    <value>Por favor introduce una fecha de publicación válida.</value>
  </data>
  <data name="Product code" xml:space="preserve">
    <value>Código de producto</value>
  </data>
  <data name="Unknown (Product code)" xml:space="preserve">
    <value>Desconocido</value>
  </data>
  <data name="Please enter a valid product code." xml:space="preserve">
    <value>Por favor introduce un código de producto válido.</value>
  </data>
  <data name="Pages" xml:space="preserve">
    <value>Páginas</value>
  </data>
  <data name="Unknown (pages)" xml:space="preserve">
    <value>Desconocido</value>
  </data>
  <data name="Please enter a valid number of pages." xml:space="preserve">
    <value>Por favor introduce un número de páginas válido.</value>
  </data>
  <data name="Issue number" xml:space="preserve">
    <value>Número de publicación</value>
  </data>
  <data name="Unknown (issue number)" xml:space="preserve">
    <value>Desconocido</value>
  </data>
  <data name="Please enter a valid issue number." xml:space="preserve">
    <value>Por favor introduce un número de publicación válido.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="Back to list" xml:space="preserve">
    <value>Volver a la lista</value>
  </data>
  <data name="Caption must be smaller than 256 characters." xml:space="preserve">
    <value>El texto de la portada debe contener menos de 256 caracteres.</value>
  </data>
  <data name="Native caption must be smaller than 256 characters." xml:space="preserve">
    <value>La portada nativa debe contener menos de 256 caracteres.</value>
  </data>
  <data name="Product code must be smaller than 18 characters." xml:space="preserve">
    <value>El código de producto debe contener menos de 18 caracteres.</value>
  </data>
</root>
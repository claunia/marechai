<?xml version="1.0" encoding="utf-8"?>
<!-- ReSharper disable MarkupTextTypo -->
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Processors" xml:space="preserve">
    <value>Procesadores</value>
    <comment>Processors</comment>
  </data>
  <data name="Loading..." xml:space="preserve">
    <value>Cargando...</value>
    <comment>Message that appears while data is being loaded from database</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
    <comment>Name</comment>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Compañía</value>
    <comment>Company</comment>
  </data>
  <data name="Introduced" xml:space="preserve">
    <value>Introducido el</value>
    <comment>Introduced</comment>
  </data>
  <data name="Model code" xml:space="preserve">
    <value>Modelo</value>
    <comment>Model code</comment>
  </data>
  <data name="Instruction set" xml:space="preserve">
    <value>Arquitectura</value>
    <comment>Instruction set</comment>
  </data>
  <data name="Create new" xml:space="preserve">
    <value>Crear nuevo</value>
    <comment>Create new</comment>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Detalles</value>
    <comment>Details</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
    <comment>Edit</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Eliminar</value>
    <comment>Delete</comment>
  </data>
  <data name="Delete processor" xml:space="preserve">
    <value>Eliminar procesador</value>
    <comment>Delete processor</comment>
  </data>
  <data name="Are you sure you want to delete {0}?" xml:space="preserve">
    <value>¿Está seguro de que desea borrar {0}?</value>
    <comment>{0} processor name</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
    <comment>Cancel</comment>
  </data>
  <data name="Processor details" xml:space="preserve">
    <value>Detalles de procesador</value>
    <comment>Processor details</comment>
  </data>
  <data name="Back to list" xml:space="preserve">
    <value>Volver a la lista</value>
    <comment>Back to list</comment>
  </data>
  <data name="PROTOTYPE" xml:space="preserve">
    <value>PROTOTIPO</value>
    <comment>PROTOTYPE</comment>
  </data>
  <data name="Nominal speed (MHz)" xml:space="preserve">
    <value>Velocidad nominal (MHz)</value>
    <comment>Nominal speed (MHz)</comment>
  </data>
  <data name="Package" xml:space="preserve">
    <value>Empaquetado</value>
    <comment>Package</comment>
  </data>
  <data name="General Purpose Registers" xml:space="preserve">
    <value>Registros de propósito general</value>
    <comment>General Purpose Registers</comment>
  </data>
  <data name="General Purpose Register size" xml:space="preserve">
    <value>Tamaño de los registros de propósito general</value>
    <comment>General Purpose Register size</comment>
  </data>
  <data name="Floating Point Registers" xml:space="preserve">
    <value>Registros de coma flotante</value>
    <comment>Floating Point Registers</comment>
  </data>
  <data name="Floating Point Register size" xml:space="preserve">
    <value>Tamaño de los registros de coma flotante</value>
    <comment>Floating Point Register size</comment>
  </data>
  <data name="SIMD Registers" xml:space="preserve">
    <value>Registros SIMD</value>
    <comment>SIMD Registers</comment>
  </data>
  <data name="SIMD Register size" xml:space="preserve">
    <value>Tamaño de los registros SIMD</value>
    <comment>SIMD Register size</comment>
  </data>
  <data name="Cores" xml:space="preserve">
    <value>Núcleos</value>
    <comment>Cores</comment>
  </data>
  <data name="Threads per core" xml:space="preserve">
    <value>Hilos por núcleo</value>
    <comment>Threads per core</comment>
  </data>
  <data name="Process" xml:space="preserve">
    <value>Proceso</value>
    <comment>Process</comment>
  </data>
  <data name="Process (nm)" xml:space="preserve">
    <value>Tamaño del proceso en nm</value>
    <comment>Process (nm)</comment>
  </data>
  <data name="Die size (mm²)" xml:space="preserve">
    <value>Area del chip (mm²)</value>
    <comment>Die size (mm²)</comment>
  </data>
  <data name="Transistors" xml:space="preserve">
    <value>Transistores</value>
    <comment>Transistors</comment>
  </data>
  <data name="Data bus size" xml:space="preserve">
    <value>Tamaño del bus de datos</value>
    <comment>Data bus size</comment>
  </data>
  <data name="Address bus size" xml:space="preserve">
    <value>Tamaño del bus de direcciones</value>
    <comment>Address bus size</comment>
  </data>
  <data name="L1 instruction cache (KiB)" xml:space="preserve">
    <value>Caché L1 de instrucciones (KiB)</value>
    <comment>L1 instruction cache (KiB)</comment>
  </data>
  <data name="L1 data cache (KiB)" xml:space="preserve">
    <value>Caché L1 de datos (KiB)</value>
    <comment>L1 data cache (KiB)</comment>
  </data>
  <data name="L2 cache (KiB)" xml:space="preserve">
    <value>Caché L2 (KiB)</value>
    <comment>L2 cache (KiB)</comment>
  </data>
  <data name="L3 cache (KiB)" xml:space="preserve">
    <value>Caché L3 (KiB)</value>
    <comment>L3 cache (KiB)</comment>
  </data>
</root>
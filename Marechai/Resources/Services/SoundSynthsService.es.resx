<?xml version="1.0" encoding="utf-8"?>
<!-- ReSharper disable MarkupTextTypo -->
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Sound synthesizers" xml:space="preserve">
    <value>Sintetizadores de sonido</value>
    <comment>Sound synthesizers</comment>
  </data>
  <data name="Loading..." xml:space="preserve">
    <value>Cargando...</value>
    <comment>Message that appears while data is being loaded from database</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
    <comment>Name</comment>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Compañía</value>
    <comment>Company</comment>
  </data>
  <data name="Model code" xml:space="preserve">
    <value>Modelo</value>
    <comment>Model</comment>
  </data>
  <data name="Introduced" xml:space="preserve">
    <value>Introducido el</value>
    <comment>Introduced</comment>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tipo</value>
    <comment>Type</comment>
  </data>
  <data name="Create new" xml:space="preserve">
    <value>Crear nuevo</value>
    <comment>Create new</comment>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Detalles</value>
    <comment>Details</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
    <comment>Edit</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Eliminar</value>
    <comment>Delete</comment>
  </data>
  <data name="Delete sound synthesizer" xml:space="preserve">
    <value>Eliminar sintetizador de sonido</value>
    <comment>Delete sound synthesizer</comment>
  </data>
  <data name="Are you sure you want to delete {0} {1}?" xml:space="preserve">
    <value>¿Está seguro de que desea borrar {0} {1}?</value>
    <comment>{0} company name, {1} synth name</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
    <comment>Cancel</comment>
  </data>
  <data name="Sound synthesizer details" xml:space="preserve">
    <value>Detalles de sintetizador de sonido</value>
    <comment>Sound synthesizer details</comment>
  </data>
  <data name="Back to list" xml:space="preserve">
    <value>Volver a la lista</value>
    <comment>Back to list</comment>
  </data>
  <data name="Digitized voices" xml:space="preserve">
    <value>Voces digitalizadas</value>
    <comment>Digitized voices</comment>
  </data>
  <data name="Sample rate (Hz)" xml:space="preserve">
    <value>Frecuencia de muestreo (Hz)</value>
    <comment>Sample rate (Hz)</comment>
  </data>
  <data name="Sample resolution (bits)" xml:space="preserve">
    <value>Resolución de muestreo (bits)</value>
    <comment>Sample resolution (bits)</comment>
  </data>
  <data name="Square wave channels" xml:space="preserve">
    <value>Canales de onda cuadrada</value>
    <comment>Square wave channels</comment>
  </data>
  <data name="White noise channels" xml:space="preserve">
    <value>Canales de ruido blanco</value>
    <comment>White noise channels</comment>
  </data>
  <data name="Unknown (company)" xml:space="preserve">
    <value>Desconocida</value>
    <comment>Unknown, referring to a company</comment>
  </data>
  <data name="Unknown (model code)" xml:space="preserve">
    <value>Desconocido</value>
    <comment>Unknown, referring to a model code</comment>
  </data>
  <data name="Unknown (introduction date)" xml:space="preserve">
    <value>Desconocida</value>
    <comment>Unknown, referring to an introduction date</comment>
  </data>
  <data name="Unknown (voices)" xml:space="preserve">
    <value>Desconocidas</value>
    <comment>Unknown, referring to digitized voices</comment>
  </data>
  <data name="Unknown (sample rate)" xml:space="preserve">
    <value>Desconocida</value>
    <comment>Unknown, referring to sample rate</comment>
  </data>
  <data name="Unknown (sample resolution)" xml:space="preserve">
    <value>Desconocida</value>
    <comment>Unknown, referring to sample resolution</comment>
  </data>
  <data name="Unknown (square wave channels)" xml:space="preserve">
    <value>Desconocidos</value>
    <comment>Unknown, referring to square wave channels</comment>
  </data>
  <data name="Unknown (white noise channels)" xml:space="preserve">
    <value>Desconocidos</value>
    <comment>Unknown, referring to white noise channels</comment>
  </data>
  <data name="Unknown (type)" xml:space="preserve">
    <value>Desconocido</value>
    <comment>Unknown, referring to sound synthesizer type</comment>
  </data>
  <data name="Please enter a valid model code." xml:space="preserve">
    <value>Por favor introduce un modelo válido.</value>
    <comment>Please enter a valid model code.</comment>
  </data>
  <data name="Prototype" xml:space="preserve">
    <value>Prototipo</value>
    <comment>Prototype</comment>
  </data>
  <data name="Please enter an introduction date." xml:space="preserve">
    <value>Por favor introduce una fecha válida.</value>
    <comment>Please enter an introduction date.</comment>
  </data>
  <data name="Please enter a valid number of voices." xml:space="preserve">
    <value>Por favor introduce un número de voces válido.</value>
    <comment>Please enter a valid number of voices.</comment>
  </data>
  <data name="Please enter a valid sample rate." xml:space="preserve">
    <value>Por favor introduce una frequencia de muestreo válida.</value>
    <comment>Please enter a valid sample rate.</comment>
  </data>
  <data name="Please enter a valid number of bits for sample resolution." xml:space="preserve">
    <value>Por favor introduce un número de bits de resolución de muestreo válido.</value>
    <comment>Please enter a valid number of bits for sample resolution.</comment>
  </data>
  <data name="Please enter a valid number of square wave channels." xml:space="preserve">
    <value>Por favor introduce un número de canales de onda cuadrada válido.</value>
    <comment>Please enter a valid number of square wave channels.</comment>
  </data>
  <data name="Please enter a valid number of white noise channels." xml:space="preserve">
    <value>Por favor introduce un número de canales de rudio blanco válido.</value>
    <comment>Please enter a valid number of white noise channels.</comment>
  </data>
  <data name="Please enter a valid sound synthesizer type." xml:space="preserve">
    <value>Por favor introduce un tipo de sintetizador válido.</value>
    <comment>Please enter a valid sound synthesizer type.</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Guardar</value>
    <comment>Save</comment>
  </data>
  <data name="Model code must be 45 characters or less." xml:space="preserve">
    <value>El modelo debe contener 45 caracteres o menos.</value>
    <comment>Model code must be 45 characters or less.</comment>
  </data>
  <data name="Name must be 50 characters or less." xml:space="preserve">
    <value>El nombre debe contener 50 caracteres o menos.</value>
    <comment>Name must be 50 characters or less.</comment>
  </data>
  <data name="Please enter a valid name." xml:space="preserve">
    <value>Por favor introduce un nombre válido.</value>
    <comment>Please enter a valid name.</comment>
  </data>
</root>
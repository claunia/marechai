// <auto-generated />
using System;
using Marechai.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Marechai.Database.Migrations
{
    [DbContext(typeof(cicmContext))]
    [Migration("20190616232349_AddDocumentPeople")]
    partial class AddDocumentPeople
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Marechai.Database.Models.BrowserTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Agif")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("agif")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("browser")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(64);

                    b.Property<sbyte>("Colors")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("colors")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte>("Flash")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("flash")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte>("Frames")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("frames")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte>("Gif87")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gif87")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte>("Gif89")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gif89")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte>("Jpeg")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("jpeg")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte>("Js")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("js")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Os")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("os")
                        .HasColumnType("varchar(32)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(32);

                    b.Property<string>("Platform")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("platform")
                        .HasColumnType("varchar(8)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(8);

                    b.Property<sbyte>("Png")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("png")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte>("Pngt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pngt")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte>("Table")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("table")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_agent")
                        .HasColumnType("varchar(128)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(128);

                    b.Property<string>("Version")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("version")
                        .HasColumnType("varchar(16)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("Browser")
                        .HasName("idx_browser_tests_browser");

                    b.HasIndex("Os")
                        .HasName("idx_browser_tests_os");

                    b.HasIndex("Platform")
                        .HasName("idx_browser_tests_platform");

                    b.HasIndex("UserAgent")
                        .HasName("idx_browser_tests_user_agent");

                    b.HasIndex("Version")
                        .HasName("idx_browser_tests_version");

                    b.ToTable("browser_tests");
                });

            modelBuilder.Entity("Marechai.Database.Models.CicmDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<int>("Version")
                        .HasColumnName("version")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.ToTable("cicm_db");
                });

            modelBuilder.Entity("Marechai.Database.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<short?>("CountryId")
                        .HasColumnName("country")
                        .HasColumnType("smallint(3)");

                    b.Property<string>("Facebook")
                        .HasColumnName("facebook")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<DateTime?>("Founded")
                        .HasColumnName("founded")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("varchar(128)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("PostalCode")
                        .HasColumnName("postal_code")
                        .HasColumnType("varchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Province")
                        .HasColumnName("province")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime?>("Sold")
                        .HasColumnName("sold")
                        .HasColumnType("datetime");

                    b.Property<int?>("SoldToId")
                        .HasColumnName("sold_to")
                        .HasColumnType("int(11)");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int(11)");

                    b.Property<string>("Twitter")
                        .HasColumnName("twitter")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Website")
                        .HasColumnName("website")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .HasName("idx_companies_address");

                    b.HasIndex("City")
                        .HasName("idx_companies_city");

                    b.HasIndex("CountryId")
                        .HasName("idx_companies_country");

                    b.HasIndex("Facebook")
                        .HasName("idx_companies_facebook");

                    b.HasIndex("Founded")
                        .HasName("idx_companies_founded");

                    b.HasIndex("Name")
                        .HasName("idx_companies_name");

                    b.HasIndex("PostalCode")
                        .HasName("idx_companies_postal_code");

                    b.HasIndex("Province")
                        .HasName("idx_companies_province");

                    b.HasIndex("Sold")
                        .HasName("idx_companies_sold");

                    b.HasIndex("SoldToId")
                        .HasName("idx_companies_sold_to");

                    b.HasIndex("Status")
                        .HasName("idx_companies_status");

                    b.HasIndex("Twitter")
                        .HasName("idx_companies_twitter");

                    b.HasIndex("Website")
                        .HasName("idx_companies_website");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("Marechai.Database.Models.CompanyDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyId");

                    b.Property<string>("Html")
                        .HasMaxLength(262144);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(262144);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Text")
                        .HasAnnotation("MySql:FullTextIndex", true);

                    b.ToTable("CompanyDescriptions");
                });

            modelBuilder.Entity("Marechai.Database.Models.CompanyLogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("CompanyId")
                        .HasColumnName("company_id")
                        .HasColumnType("int(11)");

                    b.Property<Guid>("Guid")
                        .HasColumnName("logo_guid")
                        .HasColumnType("char(36)");

                    b.Property<int?>("Year")
                        .HasColumnName("year")
                        .HasColumnType("int(4)");

                    b.HasKey("Id", "CompanyId", "Guid");

                    b.HasIndex("CompanyId")
                        .HasName("idx_company_id");

                    b.HasIndex("Guid")
                        .HasName("idx_guid");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("idx_id");

                    b.ToTable("company_logos");
                });

            modelBuilder.Entity("Marechai.Database.Models.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short?>("CountryId");

                    b.Property<string>("NativeTitle");

                    b.Property<DateTime?>("Published");

                    b.Property<string>("Synopsis")
                        .HasMaxLength(262144);

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("NativeTitle");

                    b.HasIndex("Published");

                    b.HasIndex("Synopsis")
                        .HasAnnotation("MySql:FullTextIndex", true);

                    b.HasIndex("Title");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Marechai.Database.Models.DocumentPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("PersonId");

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.HasIndex("Surname");

                    b.ToTable("DocumentPeople");
                });

            modelBuilder.Entity("Marechai.Database.Models.DocumentRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(3)");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("Enabled");

                    b.HasIndex("Name");

                    b.ToTable("DocumentRoles");

                    b.HasData(
                        new
                        {
                            Id = "abr",
                            Enabled = true,
                            Name = "Abridger"
                        },
                        new
                        {
                            Id = "acp",
                            Enabled = true,
                            Name = "Art copyist"
                        },
                        new
                        {
                            Id = "act",
                            Enabled = true,
                            Name = "Actor"
                        },
                        new
                        {
                            Id = "adi",
                            Enabled = true,
                            Name = "Art director"
                        },
                        new
                        {
                            Id = "adp",
                            Enabled = true,
                            Name = "Adapter"
                        },
                        new
                        {
                            Id = "aft",
                            Enabled = true,
                            Name = "Author of afterword, colophon, etc."
                        },
                        new
                        {
                            Id = "anl",
                            Enabled = true,
                            Name = "Analyst"
                        },
                        new
                        {
                            Id = "anm",
                            Enabled = true,
                            Name = "Animator"
                        },
                        new
                        {
                            Id = "ann",
                            Enabled = true,
                            Name = "Annotator"
                        },
                        new
                        {
                            Id = "ant",
                            Enabled = true,
                            Name = "Bibliographic antecedent"
                        },
                        new
                        {
                            Id = "ape",
                            Enabled = true,
                            Name = "Appellee"
                        },
                        new
                        {
                            Id = "apl",
                            Enabled = true,
                            Name = "Appellant"
                        },
                        new
                        {
                            Id = "app",
                            Enabled = true,
                            Name = "Applicant"
                        },
                        new
                        {
                            Id = "aqt",
                            Enabled = true,
                            Name = "Author in quotations or text abstracts"
                        },
                        new
                        {
                            Id = "arc",
                            Enabled = true,
                            Name = "Architect"
                        },
                        new
                        {
                            Id = "ard",
                            Enabled = true,
                            Name = "Artistic director"
                        },
                        new
                        {
                            Id = "arr",
                            Enabled = true,
                            Name = "Arranger"
                        },
                        new
                        {
                            Id = "art",
                            Enabled = true,
                            Name = "Artist"
                        },
                        new
                        {
                            Id = "asg",
                            Enabled = true,
                            Name = "Assignee"
                        },
                        new
                        {
                            Id = "asn",
                            Enabled = true,
                            Name = "Associated name"
                        },
                        new
                        {
                            Id = "ato",
                            Enabled = true,
                            Name = "Autographer"
                        },
                        new
                        {
                            Id = "att",
                            Enabled = true,
                            Name = "Attributed name"
                        },
                        new
                        {
                            Id = "auc",
                            Enabled = true,
                            Name = "Auctioneer"
                        },
                        new
                        {
                            Id = "aud",
                            Enabled = true,
                            Name = "Author of dialog"
                        },
                        new
                        {
                            Id = "aui",
                            Enabled = true,
                            Name = "Author of introduction, etc."
                        },
                        new
                        {
                            Id = "aus",
                            Enabled = true,
                            Name = "Screenwriter"
                        },
                        new
                        {
                            Id = "aut",
                            Enabled = true,
                            Name = "Author"
                        },
                        new
                        {
                            Id = "bdd",
                            Enabled = true,
                            Name = "Binding designer"
                        },
                        new
                        {
                            Id = "bjd",
                            Enabled = true,
                            Name = "Bookjacket designer"
                        },
                        new
                        {
                            Id = "bkd",
                            Enabled = true,
                            Name = "Book designer"
                        },
                        new
                        {
                            Id = "bkp",
                            Enabled = true,
                            Name = "Book producer"
                        },
                        new
                        {
                            Id = "blw",
                            Enabled = true,
                            Name = "Blurb writer"
                        },
                        new
                        {
                            Id = "bnd",
                            Enabled = true,
                            Name = "Binder"
                        },
                        new
                        {
                            Id = "bpd",
                            Enabled = true,
                            Name = "Bookplate designer"
                        },
                        new
                        {
                            Id = "brd",
                            Enabled = true,
                            Name = "Broadcaster"
                        },
                        new
                        {
                            Id = "brl",
                            Enabled = true,
                            Name = "Braille embosser"
                        },
                        new
                        {
                            Id = "bsl",
                            Enabled = true,
                            Name = "Bookseller"
                        },
                        new
                        {
                            Id = "cas",
                            Enabled = true,
                            Name = "Caster"
                        },
                        new
                        {
                            Id = "ccp",
                            Enabled = true,
                            Name = "Conceptor"
                        },
                        new
                        {
                            Id = "chr",
                            Enabled = true,
                            Name = "Choreographer"
                        },
                        new
                        {
                            Id = "clb",
                            Enabled = false,
                            Name = "Collaborator"
                        },
                        new
                        {
                            Id = "cli",
                            Enabled = true,
                            Name = "Client"
                        },
                        new
                        {
                            Id = "cll",
                            Enabled = true,
                            Name = "Calligrapher"
                        },
                        new
                        {
                            Id = "clr",
                            Enabled = true,
                            Name = "Colorist"
                        },
                        new
                        {
                            Id = "clt",
                            Enabled = true,
                            Name = "Collotyper"
                        },
                        new
                        {
                            Id = "cmm",
                            Enabled = true,
                            Name = "Commentator"
                        },
                        new
                        {
                            Id = "cmp",
                            Enabled = true,
                            Name = "Composer"
                        },
                        new
                        {
                            Id = "cmt",
                            Enabled = true,
                            Name = "Compositor"
                        },
                        new
                        {
                            Id = "cnd",
                            Enabled = true,
                            Name = "Conductor"
                        },
                        new
                        {
                            Id = "cng",
                            Enabled = true,
                            Name = "Cinematographer"
                        },
                        new
                        {
                            Id = "cns",
                            Enabled = true,
                            Name = "Censor"
                        },
                        new
                        {
                            Id = "coe",
                            Enabled = true,
                            Name = "Contestant-appellee"
                        },
                        new
                        {
                            Id = "col",
                            Enabled = true,
                            Name = "Collector"
                        },
                        new
                        {
                            Id = "com",
                            Enabled = true,
                            Name = "Compiler"
                        },
                        new
                        {
                            Id = "con",
                            Enabled = true,
                            Name = "Conservator"
                        },
                        new
                        {
                            Id = "cor",
                            Enabled = true,
                            Name = "Collection registrar"
                        },
                        new
                        {
                            Id = "cos",
                            Enabled = true,
                            Name = "Contestant"
                        },
                        new
                        {
                            Id = "cot",
                            Enabled = true,
                            Name = "Contestant-appellant"
                        },
                        new
                        {
                            Id = "cou",
                            Enabled = true,
                            Name = "Court governed"
                        },
                        new
                        {
                            Id = "cov",
                            Enabled = true,
                            Name = "Cover designer"
                        },
                        new
                        {
                            Id = "cpc",
                            Enabled = true,
                            Name = "Copyright claimant"
                        },
                        new
                        {
                            Id = "cpe",
                            Enabled = true,
                            Name = "Complainant-appellee"
                        },
                        new
                        {
                            Id = "cph",
                            Enabled = true,
                            Name = "Copyright holder"
                        },
                        new
                        {
                            Id = "cpl",
                            Enabled = true,
                            Name = "Complainant"
                        },
                        new
                        {
                            Id = "cpt",
                            Enabled = true,
                            Name = "Complainant-appellant"
                        },
                        new
                        {
                            Id = "cre",
                            Enabled = true,
                            Name = "Creator"
                        },
                        new
                        {
                            Id = "crp",
                            Enabled = true,
                            Name = "Correspondent"
                        },
                        new
                        {
                            Id = "crr",
                            Enabled = true,
                            Name = "Corrector"
                        },
                        new
                        {
                            Id = "crt",
                            Enabled = true,
                            Name = "Court reporter"
                        },
                        new
                        {
                            Id = "csl",
                            Enabled = true,
                            Name = "Consultant"
                        },
                        new
                        {
                            Id = "csp",
                            Enabled = true,
                            Name = "Consultant to a project"
                        },
                        new
                        {
                            Id = "cst",
                            Enabled = true,
                            Name = "Costume designer"
                        },
                        new
                        {
                            Id = "ctb",
                            Enabled = true,
                            Name = "Contributor"
                        },
                        new
                        {
                            Id = "cte",
                            Enabled = true,
                            Name = "Contestee-appellee"
                        },
                        new
                        {
                            Id = "ctg",
                            Enabled = true,
                            Name = "Cartographer"
                        },
                        new
                        {
                            Id = "ctr",
                            Enabled = true,
                            Name = "Contractor"
                        },
                        new
                        {
                            Id = "cts",
                            Enabled = true,
                            Name = "Contestee"
                        },
                        new
                        {
                            Id = "ctt",
                            Enabled = true,
                            Name = "Contestee-appellant"
                        },
                        new
                        {
                            Id = "cur",
                            Enabled = true,
                            Name = "Curator"
                        },
                        new
                        {
                            Id = "cwt",
                            Enabled = true,
                            Name = "Commentator for written text"
                        },
                        new
                        {
                            Id = "dbp",
                            Enabled = true,
                            Name = "Distribution place"
                        },
                        new
                        {
                            Id = "dfd",
                            Enabled = true,
                            Name = "Defendant"
                        },
                        new
                        {
                            Id = "dfe",
                            Enabled = true,
                            Name = "Defendant-appellee"
                        },
                        new
                        {
                            Id = "dft",
                            Enabled = true,
                            Name = "Defendant-appellant"
                        },
                        new
                        {
                            Id = "dgg",
                            Enabled = true,
                            Name = "Degree granting institution"
                        },
                        new
                        {
                            Id = "dgs",
                            Enabled = true,
                            Name = "Degree supervisor"
                        },
                        new
                        {
                            Id = "dis",
                            Enabled = true,
                            Name = "Dissertant"
                        },
                        new
                        {
                            Id = "dln",
                            Enabled = true,
                            Name = "Delineator"
                        },
                        new
                        {
                            Id = "dnc",
                            Enabled = true,
                            Name = "Dancer"
                        },
                        new
                        {
                            Id = "dnr",
                            Enabled = true,
                            Name = "Donor"
                        },
                        new
                        {
                            Id = "dpc",
                            Enabled = true,
                            Name = "Depicted"
                        },
                        new
                        {
                            Id = "dpt",
                            Enabled = true,
                            Name = "Depositor"
                        },
                        new
                        {
                            Id = "drm",
                            Enabled = true,
                            Name = "Draftsman"
                        },
                        new
                        {
                            Id = "drt",
                            Enabled = true,
                            Name = "Director"
                        },
                        new
                        {
                            Id = "dsr",
                            Enabled = true,
                            Name = "Designer"
                        },
                        new
                        {
                            Id = "dst",
                            Enabled = true,
                            Name = "Distributor"
                        },
                        new
                        {
                            Id = "dtc",
                            Enabled = true,
                            Name = "Data contributor"
                        },
                        new
                        {
                            Id = "dte",
                            Enabled = true,
                            Name = "Dedicatee"
                        },
                        new
                        {
                            Id = "dtm",
                            Enabled = true,
                            Name = "Data manager"
                        },
                        new
                        {
                            Id = "dto",
                            Enabled = true,
                            Name = "Dedicator"
                        },
                        new
                        {
                            Id = "dub",
                            Enabled = true,
                            Name = "Dubious author"
                        },
                        new
                        {
                            Id = "edc",
                            Enabled = true,
                            Name = "Editor of compilation"
                        },
                        new
                        {
                            Id = "edm",
                            Enabled = true,
                            Name = "Editor of moving image work"
                        },
                        new
                        {
                            Id = "edt",
                            Enabled = true,
                            Name = "Editor"
                        },
                        new
                        {
                            Id = "egr",
                            Enabled = true,
                            Name = "Engraver"
                        },
                        new
                        {
                            Id = "elg",
                            Enabled = true,
                            Name = "Electrician"
                        },
                        new
                        {
                            Id = "elt",
                            Enabled = true,
                            Name = "Electrotyper"
                        },
                        new
                        {
                            Id = "eng",
                            Enabled = true,
                            Name = "Engineer"
                        },
                        new
                        {
                            Id = "enj",
                            Enabled = true,
                            Name = "Enacting jurisdiction"
                        },
                        new
                        {
                            Id = "etr",
                            Enabled = true,
                            Name = "Etcher"
                        },
                        new
                        {
                            Id = "evp",
                            Enabled = true,
                            Name = "Event place"
                        },
                        new
                        {
                            Id = "exp",
                            Enabled = true,
                            Name = "Expert"
                        },
                        new
                        {
                            Id = "fac",
                            Enabled = true,
                            Name = "Facsimilist"
                        },
                        new
                        {
                            Id = "fds",
                            Enabled = true,
                            Name = "Film distributor"
                        },
                        new
                        {
                            Id = "fld",
                            Enabled = true,
                            Name = "Field director"
                        },
                        new
                        {
                            Id = "flm",
                            Enabled = true,
                            Name = "Film editor"
                        },
                        new
                        {
                            Id = "fmd",
                            Enabled = true,
                            Name = "Film director"
                        },
                        new
                        {
                            Id = "fmk",
                            Enabled = true,
                            Name = "Filmmaker"
                        },
                        new
                        {
                            Id = "fmo",
                            Enabled = true,
                            Name = "Former owner"
                        },
                        new
                        {
                            Id = "fmp",
                            Enabled = true,
                            Name = "Film producer"
                        },
                        new
                        {
                            Id = "fnd",
                            Enabled = true,
                            Name = "Funder"
                        },
                        new
                        {
                            Id = "fpy",
                            Enabled = true,
                            Name = "First party"
                        },
                        new
                        {
                            Id = "frg",
                            Enabled = true,
                            Name = "Forger"
                        },
                        new
                        {
                            Id = "gis",
                            Enabled = true,
                            Name = "Geographic information specialist"
                        },
                        new
                        {
                            Id = "grt",
                            Enabled = false,
                            Name = "Graphic technician"
                        },
                        new
                        {
                            Id = "his",
                            Enabled = true,
                            Name = "Host institution"
                        },
                        new
                        {
                            Id = "hnr",
                            Enabled = true,
                            Name = "Honoree"
                        },
                        new
                        {
                            Id = "hst",
                            Enabled = true,
                            Name = "Host"
                        },
                        new
                        {
                            Id = "ill",
                            Enabled = true,
                            Name = "Illustrator"
                        },
                        new
                        {
                            Id = "ilu",
                            Enabled = true,
                            Name = "Illuminator"
                        },
                        new
                        {
                            Id = "ins",
                            Enabled = true,
                            Name = "Inscriber"
                        },
                        new
                        {
                            Id = "inv",
                            Enabled = true,
                            Name = "Inventor"
                        },
                        new
                        {
                            Id = "isb",
                            Enabled = true,
                            Name = "Issuing body"
                        },
                        new
                        {
                            Id = "itr",
                            Enabled = true,
                            Name = "Instrumentalist"
                        },
                        new
                        {
                            Id = "ive",
                            Enabled = true,
                            Name = "Interviewee"
                        },
                        new
                        {
                            Id = "ivr",
                            Enabled = true,
                            Name = "Interviewer"
                        },
                        new
                        {
                            Id = "jud",
                            Enabled = true,
                            Name = "Judge"
                        },
                        new
                        {
                            Id = "jug",
                            Enabled = true,
                            Name = "Jurisdiction governed"
                        },
                        new
                        {
                            Id = "lbr",
                            Enabled = true,
                            Name = "Laboratory"
                        },
                        new
                        {
                            Id = "lbt",
                            Enabled = true,
                            Name = "Librettist"
                        },
                        new
                        {
                            Id = "ldr",
                            Enabled = true,
                            Name = "Laboratory director"
                        },
                        new
                        {
                            Id = "led",
                            Enabled = true,
                            Name = "Lead"
                        },
                        new
                        {
                            Id = "lee",
                            Enabled = true,
                            Name = "Libelee-appellee"
                        },
                        new
                        {
                            Id = "lel",
                            Enabled = true,
                            Name = "Libelee"
                        },
                        new
                        {
                            Id = "len",
                            Enabled = true,
                            Name = "Lender"
                        },
                        new
                        {
                            Id = "let",
                            Enabled = true,
                            Name = "Libelee-appellant"
                        },
                        new
                        {
                            Id = "lgd",
                            Enabled = true,
                            Name = "Lighting designer"
                        },
                        new
                        {
                            Id = "lie",
                            Enabled = true,
                            Name = "Libelant-appellee"
                        },
                        new
                        {
                            Id = "lil",
                            Enabled = true,
                            Name = "Libelant"
                        },
                        new
                        {
                            Id = "lit",
                            Enabled = true,
                            Name = "Libelant-appellant"
                        },
                        new
                        {
                            Id = "lsa",
                            Enabled = true,
                            Name = "Landscape architect"
                        },
                        new
                        {
                            Id = "lse",
                            Enabled = true,
                            Name = "Licensee"
                        },
                        new
                        {
                            Id = "lso",
                            Enabled = true,
                            Name = "Licensor"
                        },
                        new
                        {
                            Id = "ltg",
                            Enabled = true,
                            Name = "Lithographer"
                        },
                        new
                        {
                            Id = "lyr",
                            Enabled = true,
                            Name = "Lyricist"
                        },
                        new
                        {
                            Id = "mcp",
                            Enabled = true,
                            Name = "Music copyist"
                        },
                        new
                        {
                            Id = "mdc",
                            Enabled = true,
                            Name = "Metadata contact"
                        },
                        new
                        {
                            Id = "med",
                            Enabled = true,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = "mfp",
                            Enabled = true,
                            Name = "Manufacture place"
                        },
                        new
                        {
                            Id = "mfr",
                            Enabled = true,
                            Name = "Manufacturer"
                        },
                        new
                        {
                            Id = "mod",
                            Enabled = true,
                            Name = "Moderator"
                        },
                        new
                        {
                            Id = "mon",
                            Enabled = true,
                            Name = "Monitor"
                        },
                        new
                        {
                            Id = "mrb",
                            Enabled = true,
                            Name = "Marbler"
                        },
                        new
                        {
                            Id = "mrk",
                            Enabled = true,
                            Name = "Markup editor"
                        },
                        new
                        {
                            Id = "msd",
                            Enabled = true,
                            Name = "Musical director"
                        },
                        new
                        {
                            Id = "mte",
                            Enabled = true,
                            Name = "Metal-engraver"
                        },
                        new
                        {
                            Id = "mtk",
                            Enabled = true,
                            Name = "Minute taker"
                        },
                        new
                        {
                            Id = "mus",
                            Enabled = true,
                            Name = "Musician"
                        },
                        new
                        {
                            Id = "nrt",
                            Enabled = true,
                            Name = "Narrator"
                        },
                        new
                        {
                            Id = "opn",
                            Enabled = true,
                            Name = "Opponent"
                        },
                        new
                        {
                            Id = "org",
                            Enabled = true,
                            Name = "Originator"
                        },
                        new
                        {
                            Id = "orm",
                            Enabled = true,
                            Name = "Organizer"
                        },
                        new
                        {
                            Id = "osp",
                            Enabled = true,
                            Name = "Onscreen presenter"
                        },
                        new
                        {
                            Id = "oth",
                            Enabled = true,
                            Name = "Other"
                        },
                        new
                        {
                            Id = "own",
                            Enabled = true,
                            Name = "Owner"
                        },
                        new
                        {
                            Id = "pan",
                            Enabled = true,
                            Name = "Panelist"
                        },
                        new
                        {
                            Id = "pat",
                            Enabled = true,
                            Name = "Patron"
                        },
                        new
                        {
                            Id = "pbd",
                            Enabled = true,
                            Name = "Publishing director"
                        },
                        new
                        {
                            Id = "pbl",
                            Enabled = true,
                            Name = "Publisher"
                        },
                        new
                        {
                            Id = "pdr",
                            Enabled = true,
                            Name = "Project director"
                        },
                        new
                        {
                            Id = "pfr",
                            Enabled = true,
                            Name = "Proofreader"
                        },
                        new
                        {
                            Id = "pht",
                            Enabled = true,
                            Name = "Photographer"
                        },
                        new
                        {
                            Id = "plt",
                            Enabled = true,
                            Name = "Platemaker"
                        },
                        new
                        {
                            Id = "pma",
                            Enabled = true,
                            Name = "Permitting agency"
                        },
                        new
                        {
                            Id = "pmn",
                            Enabled = true,
                            Name = "Production manager"
                        },
                        new
                        {
                            Id = "pop",
                            Enabled = true,
                            Name = "Printer of plates"
                        },
                        new
                        {
                            Id = "ppm",
                            Enabled = true,
                            Name = "Papermaker"
                        },
                        new
                        {
                            Id = "ppt",
                            Enabled = true,
                            Name = "Puppeteer"
                        },
                        new
                        {
                            Id = "pra",
                            Enabled = true,
                            Name = "Praeses"
                        },
                        new
                        {
                            Id = "prc",
                            Enabled = true,
                            Name = "Process contact"
                        },
                        new
                        {
                            Id = "prd",
                            Enabled = true,
                            Name = "Production personnel"
                        },
                        new
                        {
                            Id = "pre",
                            Enabled = true,
                            Name = "Presenter"
                        },
                        new
                        {
                            Id = "prf",
                            Enabled = true,
                            Name = "Performer"
                        },
                        new
                        {
                            Id = "prg",
                            Enabled = true,
                            Name = "Programmer"
                        },
                        new
                        {
                            Id = "prm",
                            Enabled = true,
                            Name = "Printmaker"
                        },
                        new
                        {
                            Id = "prn",
                            Enabled = true,
                            Name = "Production company"
                        },
                        new
                        {
                            Id = "pro",
                            Enabled = true,
                            Name = "Producer"
                        },
                        new
                        {
                            Id = "prp",
                            Enabled = true,
                            Name = "Production place"
                        },
                        new
                        {
                            Id = "prs",
                            Enabled = true,
                            Name = "Production designer"
                        },
                        new
                        {
                            Id = "prt",
                            Enabled = true,
                            Name = "Printer"
                        },
                        new
                        {
                            Id = "prv",
                            Enabled = true,
                            Name = "Provider"
                        },
                        new
                        {
                            Id = "pta",
                            Enabled = true,
                            Name = "Patent applicant"
                        },
                        new
                        {
                            Id = "pte",
                            Enabled = true,
                            Name = "Plaintiff-appellee"
                        },
                        new
                        {
                            Id = "ptf",
                            Enabled = true,
                            Name = "Plaintiff"
                        },
                        new
                        {
                            Id = "pth",
                            Enabled = true,
                            Name = "Patent holder"
                        },
                        new
                        {
                            Id = "ptt",
                            Enabled = true,
                            Name = "Plaintiff-appellant"
                        },
                        new
                        {
                            Id = "pup",
                            Enabled = true,
                            Name = "Publication place"
                        },
                        new
                        {
                            Id = "rbr",
                            Enabled = true,
                            Name = "Rubricator"
                        },
                        new
                        {
                            Id = "rcd",
                            Enabled = true,
                            Name = "Recordist"
                        },
                        new
                        {
                            Id = "rce",
                            Enabled = true,
                            Name = "Recording engineer"
                        },
                        new
                        {
                            Id = "rcp",
                            Enabled = true,
                            Name = "Addressee"
                        },
                        new
                        {
                            Id = "rdd",
                            Enabled = true,
                            Name = "Radio director"
                        },
                        new
                        {
                            Id = "red",
                            Enabled = true,
                            Name = "Redaktor"
                        },
                        new
                        {
                            Id = "ren",
                            Enabled = true,
                            Name = "Renderer"
                        },
                        new
                        {
                            Id = "res",
                            Enabled = true,
                            Name = "Researcher"
                        },
                        new
                        {
                            Id = "rev",
                            Enabled = true,
                            Name = "Reviewer"
                        },
                        new
                        {
                            Id = "rpc",
                            Enabled = true,
                            Name = "Radio producer"
                        },
                        new
                        {
                            Id = "rps",
                            Enabled = true,
                            Name = "Repository"
                        },
                        new
                        {
                            Id = "rpt",
                            Enabled = true,
                            Name = "Reporter"
                        },
                        new
                        {
                            Id = "rpy",
                            Enabled = true,
                            Name = "Responsible party"
                        },
                        new
                        {
                            Id = "rse",
                            Enabled = true,
                            Name = "Respondent-appellee"
                        },
                        new
                        {
                            Id = "rsg",
                            Enabled = true,
                            Name = "Restager"
                        },
                        new
                        {
                            Id = "rsp",
                            Enabled = true,
                            Name = "Respondent"
                        },
                        new
                        {
                            Id = "rsr",
                            Enabled = true,
                            Name = "Restorationist"
                        },
                        new
                        {
                            Id = "rst",
                            Enabled = true,
                            Name = "Respondent-appellant"
                        },
                        new
                        {
                            Id = "rth",
                            Enabled = true,
                            Name = "Research team head"
                        },
                        new
                        {
                            Id = "rtm",
                            Enabled = true,
                            Name = "Research team member"
                        },
                        new
                        {
                            Id = "sad",
                            Enabled = true,
                            Name = "Scientific advisor"
                        },
                        new
                        {
                            Id = "sce",
                            Enabled = true,
                            Name = "Scenarist"
                        },
                        new
                        {
                            Id = "scl",
                            Enabled = true,
                            Name = "Sculptor"
                        },
                        new
                        {
                            Id = "scr",
                            Enabled = true,
                            Name = "Scribe"
                        },
                        new
                        {
                            Id = "sds",
                            Enabled = true,
                            Name = "Sound designer"
                        },
                        new
                        {
                            Id = "sec",
                            Enabled = true,
                            Name = "Secretary"
                        },
                        new
                        {
                            Id = "sgd",
                            Enabled = true,
                            Name = "Stage director"
                        },
                        new
                        {
                            Id = "sgn",
                            Enabled = true,
                            Name = "Signer"
                        },
                        new
                        {
                            Id = "sht",
                            Enabled = true,
                            Name = "Supporting host"
                        },
                        new
                        {
                            Id = "sll",
                            Enabled = true,
                            Name = "Seller"
                        },
                        new
                        {
                            Id = "sng",
                            Enabled = true,
                            Name = "Singer"
                        },
                        new
                        {
                            Id = "spk",
                            Enabled = true,
                            Name = "Speaker"
                        },
                        new
                        {
                            Id = "spn",
                            Enabled = true,
                            Name = "Sponsor"
                        },
                        new
                        {
                            Id = "spy",
                            Enabled = true,
                            Name = "Second party"
                        },
                        new
                        {
                            Id = "srv",
                            Enabled = true,
                            Name = "Surveyor"
                        },
                        new
                        {
                            Id = "std",
                            Enabled = true,
                            Name = "Set designer"
                        },
                        new
                        {
                            Id = "stg",
                            Enabled = true,
                            Name = "Setting"
                        },
                        new
                        {
                            Id = "stl",
                            Enabled = true,
                            Name = "Storyteller"
                        },
                        new
                        {
                            Id = "stm",
                            Enabled = true,
                            Name = "Stage manager"
                        },
                        new
                        {
                            Id = "stn",
                            Enabled = true,
                            Name = "Standards body"
                        },
                        new
                        {
                            Id = "str",
                            Enabled = true,
                            Name = "Stereotyper"
                        },
                        new
                        {
                            Id = "tcd",
                            Enabled = true,
                            Name = "Technical director"
                        },
                        new
                        {
                            Id = "tch",
                            Enabled = true,
                            Name = "Teacher"
                        },
                        new
                        {
                            Id = "ths",
                            Enabled = true,
                            Name = "Thesis advisor"
                        },
                        new
                        {
                            Id = "tld",
                            Enabled = true,
                            Name = "Television director"
                        },
                        new
                        {
                            Id = "tlp",
                            Enabled = true,
                            Name = "Television producer"
                        },
                        new
                        {
                            Id = "trc",
                            Enabled = true,
                            Name = "Transcriber"
                        },
                        new
                        {
                            Id = "trl",
                            Enabled = true,
                            Name = "Translator"
                        },
                        new
                        {
                            Id = "tyd",
                            Enabled = true,
                            Name = "Type designer"
                        },
                        new
                        {
                            Id = "tyg",
                            Enabled = true,
                            Name = "Typographer"
                        },
                        new
                        {
                            Id = "uvp",
                            Enabled = true,
                            Name = "University place"
                        },
                        new
                        {
                            Id = "vac",
                            Enabled = true,
                            Name = "Voice actor"
                        },
                        new
                        {
                            Id = "vdg",
                            Enabled = true,
                            Name = "Videographer"
                        },
                        new
                        {
                            Id = "voc",
                            Enabled = false,
                            Name = "Vocalist"
                        },
                        new
                        {
                            Id = "wac",
                            Enabled = true,
                            Name = "Writer of added commentary"
                        },
                        new
                        {
                            Id = "wal",
                            Enabled = true,
                            Name = "Writer of added lyrics"
                        },
                        new
                        {
                            Id = "wam",
                            Enabled = true,
                            Name = "Writer of accompanying material"
                        },
                        new
                        {
                            Id = "wat",
                            Enabled = true,
                            Name = "Writer of added text"
                        },
                        new
                        {
                            Id = "wdc",
                            Enabled = true,
                            Name = "Woodcutter"
                        },
                        new
                        {
                            Id = "wde",
                            Enabled = true,
                            Name = "Wood engraver"
                        },
                        new
                        {
                            Id = "win",
                            Enabled = true,
                            Name = "Writer of introduction"
                        },
                        new
                        {
                            Id = "wit",
                            Enabled = true,
                            Name = "Witness"
                        },
                        new
                        {
                            Id = "wpr",
                            Enabled = true,
                            Name = "Writer of preface"
                        },
                        new
                        {
                            Id = "wst",
                            Enabled = true,
                            Name = "Writer of supplementary textual content"
                        });
                });

            modelBuilder.Entity("Marechai.Database.Models.Forbidden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("browser")
                        .HasColumnType("char(128)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Date")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date")
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ip")
                        .HasColumnType("char(16)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Referer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("referer")
                        .HasColumnType("char(255)")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("Browser")
                        .HasName("idx_forbidden_browser");

                    b.HasIndex("Date")
                        .HasName("idx_forbidden_date");

                    b.HasIndex("Ip")
                        .HasName("idx_forbidden_ip");

                    b.HasIndex("Referer")
                        .HasName("idx_forbidden_referer");

                    b.ToTable("forbidden");
                });

            modelBuilder.Entity("Marechai.Database.Models.Gpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("company")
                        .HasColumnType("int(11)");

                    b.Property<float?>("DieSize")
                        .HasColumnName("die_size");

                    b.Property<DateTime?>("Introduced")
                        .HasColumnName("introduced")
                        .HasColumnType("datetime");

                    b.Property<string>("ModelCode")
                        .HasColumnName("model_code")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("char(128)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(128);

                    b.Property<string>("Package")
                        .HasColumnName("package")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Process")
                        .HasColumnName("process")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<float?>("ProcessNm")
                        .HasColumnName("process_nm");

                    b.Property<long?>("Transistors")
                        .HasColumnName("transistors")
                        .HasColumnType("bigint(20)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .HasName("idx_gpus_company");

                    b.HasIndex("DieSize")
                        .HasName("idx_gpus_die_size");

                    b.HasIndex("Introduced")
                        .HasName("idx_gpus_introduced");

                    b.HasIndex("ModelCode")
                        .HasName("idx_gpus_model_code");

                    b.HasIndex("Name")
                        .HasName("idx_gpus_name");

                    b.HasIndex("Package")
                        .HasName("idx_gpus_package");

                    b.HasIndex("Process")
                        .HasName("idx_gpus_process");

                    b.HasIndex("ProcessNm")
                        .HasName("idx_gpus_process_nm");

                    b.HasIndex("Transistors")
                        .HasName("idx_gpus_transistors");

                    b.ToTable("gpus");
                });

            modelBuilder.Entity("Marechai.Database.Models.GpusByMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("GpuId")
                        .HasColumnName("gpu")
                        .HasColumnType("int(11)");

                    b.Property<int>("MachineId")
                        .HasColumnName("machine")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("GpuId")
                        .HasName("idx_gpus_by_machine_gpus");

                    b.HasIndex("MachineId")
                        .HasName("idx_gpus_by_machine_machine");

                    b.ToTable("gpus_by_machine");
                });

            modelBuilder.Entity("Marechai.Database.Models.GpusByOwnedMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GpuId");

                    b.Property<long>("OwnedMachineId");

                    b.HasKey("Id");

                    b.HasIndex("GpuId");

                    b.HasIndex("OwnedMachineId");

                    b.ToTable("GpusByOwnedMachine");
                });

            modelBuilder.Entity("Marechai.Database.Models.InstructionSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("instruction_set")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.ToTable("instruction_sets");
                });

            modelBuilder.Entity("Marechai.Database.Models.InstructionSetExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnName("extension")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.ToTable("instruction_set_extensions");
                });

            modelBuilder.Entity("Marechai.Database.Models.InstructionSetExtensionsByProcessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("ProcessorId")
                        .HasColumnName("processor_id")
                        .HasColumnType("int(11)");

                    b.Property<int>("ExtensionId")
                        .HasColumnName("extension_id")
                        .HasColumnType("int(11)");

                    b.HasKey("Id", "ProcessorId", "ExtensionId");

                    b.HasIndex("ExtensionId")
                        .HasName("idx_setextension_extension");

                    b.HasIndex("ProcessorId")
                        .HasName("idx_setextension_processor");

                    b.ToTable("instruction_set_extensions_by_processor");
                });

            modelBuilder.Entity("Marechai.Database.Models.Iso31661Numeric", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("smallint(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasName("idx_name");

                    b.ToTable("iso3166_1_numeric");
                });

            modelBuilder.Entity("Marechai.Database.Models.Iso639", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(3)");

                    b.Property<string>("Comment")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Part1")
                        .HasColumnType("char(2)");

                    b.Property<string>("Part2B")
                        .HasColumnType("char(3)");

                    b.Property<string>("Part2T")
                        .HasColumnType("char(3)");

                    b.Property<string>("ReferenceName")
                        .IsRequired()
                        .HasColumnName("Ref_Name")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("Id");

                    b.HasIndex("Comment");

                    b.HasIndex("Part1");

                    b.HasIndex("Part2B");

                    b.HasIndex("Part2T");

                    b.HasIndex("ReferenceName");

                    b.HasIndex("Scope");

                    b.HasIndex("Type");

                    b.ToTable("ISO_639-3");
                });

            modelBuilder.Entity("Marechai.Database.Models.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("FsfApproved");

                    b.Property<string>("Link")
                        .HasMaxLength(512);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("OsiApproved");

                    b.Property<string>("SPDX");

                    b.Property<string>("Text")
                        .HasColumnType("longtext")
                        .HasMaxLength(131072);

                    b.HasKey("Id");

                    b.HasIndex("FsfApproved");

                    b.HasIndex("Name");

                    b.HasIndex("OsiApproved");

                    b.HasIndex("SPDX");

                    b.ToTable("Licenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FsfApproved = false,
                            Name = "Fair use",
                            OsiApproved = false
                        },
                        new
                        {
                            Id = 2,
                            FsfApproved = false,
                            Name = "Advertisement use",
                            OsiApproved = false
                        },
                        new
                        {
                            Id = 3,
                            FsfApproved = false,
                            Name = "All rights reserved",
                            OsiApproved = false
                        },
                        new
                        {
                            Id = 4,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/0BSD.html#licenseText",
                            Name = "BSD Zero Clause License",
                            OsiApproved = true,
                            SPDX = "0BSD"
                        },
                        new
                        {
                            Id = 5,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/AAL.html#licenseText",
                            Name = "Attribution Assurance License",
                            OsiApproved = true,
                            SPDX = "AAL"
                        },
                        new
                        {
                            Id = 6,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Abstyles.html#licenseText",
                            Name = "Abstyles License",
                            OsiApproved = false,
                            SPDX = "Abstyles"
                        },
                        new
                        {
                            Id = 7,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Adobe-2006.html#licenseText",
                            Name = "Adobe Systems Incorporated Source Code License Agreement",
                            OsiApproved = false,
                            SPDX = "Adobe-2006"
                        },
                        new
                        {
                            Id = 8,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Adobe-Glyph.html#licenseText",
                            Name = "Adobe Glyph List License",
                            OsiApproved = false,
                            SPDX = "Adobe-Glyph"
                        },
                        new
                        {
                            Id = 9,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/ADSL.html#licenseText",
                            Name = "Amazon Digital Services License",
                            OsiApproved = false,
                            SPDX = "ADSL"
                        },
                        new
                        {
                            Id = 10,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/AFL-1.1.html#licenseText",
                            Name = "Academic Free License v1.1",
                            OsiApproved = true,
                            SPDX = "AFL-1.1"
                        },
                        new
                        {
                            Id = 11,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/AFL-1.2.html#licenseText",
                            Name = "Academic Free License v1.2",
                            OsiApproved = true,
                            SPDX = "AFL-1.2"
                        },
                        new
                        {
                            Id = 12,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/AFL-2.0.html#licenseText",
                            Name = "Academic Free License v2.0",
                            OsiApproved = true,
                            SPDX = "AFL-2.0"
                        },
                        new
                        {
                            Id = 13,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/AFL-2.1.html#licenseText",
                            Name = "Academic Free License v2.1",
                            OsiApproved = true,
                            SPDX = "AFL-2.1"
                        },
                        new
                        {
                            Id = 14,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/AFL-3.0.html#licenseText",
                            Name = "Academic Free License v3.0",
                            OsiApproved = true,
                            SPDX = "AFL-3.0"
                        },
                        new
                        {
                            Id = 15,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Afmparse.html#licenseText",
                            Name = "Afmparse License",
                            OsiApproved = false,
                            SPDX = "Afmparse"
                        },
                        new
                        {
                            Id = 16,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/AGPL-1.0-only.html#licenseText",
                            Name = "Affero General Public License v1.0 only",
                            OsiApproved = false,
                            SPDX = "AGPL-1.0-only"
                        },
                        new
                        {
                            Id = 17,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/AGPL-1.0-or-later.html#licenseText",
                            Name = "Affero General Public License v1.0 or later",
                            OsiApproved = false,
                            SPDX = "AGPL-1.0-or-later"
                        },
                        new
                        {
                            Id = 18,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/AGPL-3.0-only.html#licenseText",
                            Name = "GNU Affero General Public License v3.0 only",
                            OsiApproved = true,
                            SPDX = "AGPL-3.0-only"
                        },
                        new
                        {
                            Id = 19,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/AGPL-3.0-or-later.html#licenseText",
                            Name = "GNU Affero General Public License v3.0 or later",
                            OsiApproved = true,
                            SPDX = "AGPL-3.0-or-later"
                        },
                        new
                        {
                            Id = 20,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Aladdin.html#licenseText",
                            Name = "Aladdin Free Public License",
                            OsiApproved = false,
                            SPDX = "Aladdin"
                        },
                        new
                        {
                            Id = 21,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/AMDPLPA.html#licenseText",
                            Name = "AMD's plpa_map.c License",
                            OsiApproved = false,
                            SPDX = "AMDPLPA"
                        },
                        new
                        {
                            Id = 22,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/AML.html#licenseText",
                            Name = "Apple MIT License",
                            OsiApproved = false,
                            SPDX = "AML"
                        },
                        new
                        {
                            Id = 23,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/AMPAS.html#licenseText",
                            Name = "Academy of Motion Picture Arts and Sciences BSD",
                            OsiApproved = false,
                            SPDX = "AMPAS"
                        },
                        new
                        {
                            Id = 24,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/ANTLR-PD.html#licenseText",
                            Name = "ANTLR Software Rights Notice",
                            OsiApproved = false,
                            SPDX = "ANTLR-PD"
                        },
                        new
                        {
                            Id = 25,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Apache-1.0.html#licenseText",
                            Name = "Apache License 1.0",
                            OsiApproved = false,
                            SPDX = "Apache-1.0"
                        },
                        new
                        {
                            Id = 26,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Apache-1.1.html#licenseText",
                            Name = "Apache License 1.1",
                            OsiApproved = true,
                            SPDX = "Apache-1.1"
                        },
                        new
                        {
                            Id = 27,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Apache-2.0.html#licenseText",
                            Name = "Apache License 2.0",
                            OsiApproved = true,
                            SPDX = "Apache-2.0"
                        },
                        new
                        {
                            Id = 28,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/APAFML.html#licenseText",
                            Name = "Adobe Postscript AFM License",
                            OsiApproved = false,
                            SPDX = "APAFML"
                        },
                        new
                        {
                            Id = 29,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/APL-1.0.html#licenseText",
                            Name = "Adaptive Public License 1.0",
                            OsiApproved = true,
                            SPDX = "APL-1.0"
                        },
                        new
                        {
                            Id = 30,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/APSL-1.0.html#licenseText",
                            Name = "Apple Public Source License 1.0",
                            OsiApproved = true,
                            SPDX = "APSL-1.0"
                        },
                        new
                        {
                            Id = 31,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/APSL-1.1.html#licenseText",
                            Name = "Apple Public Source License 1.1",
                            OsiApproved = true,
                            SPDX = "APSL-1.1"
                        },
                        new
                        {
                            Id = 32,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/APSL-1.2.html#licenseText",
                            Name = "Apple Public Source License 1.2",
                            OsiApproved = true,
                            SPDX = "APSL-1.2"
                        },
                        new
                        {
                            Id = 33,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/APSL-2.0.html#licenseText",
                            Name = "Apple Public Source License 2.0",
                            OsiApproved = true,
                            SPDX = "APSL-2.0"
                        },
                        new
                        {
                            Id = 34,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Artistic-1.0.html#licenseText",
                            Name = "Artistic License 1.0",
                            OsiApproved = true,
                            SPDX = "Artistic-1.0"
                        },
                        new
                        {
                            Id = 35,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Artistic-1.0-cl8.html#licenseText",
                            Name = "Artistic License 1.0 w/clause 8",
                            OsiApproved = true,
                            SPDX = "Artistic-1.0-cl8"
                        },
                        new
                        {
                            Id = 36,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Artistic-1.0-Perl.html#licenseText",
                            Name = "Artistic License 1.0 (Perl)",
                            OsiApproved = true,
                            SPDX = "Artistic-1.0-Perl"
                        },
                        new
                        {
                            Id = 37,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Artistic-2.0.html#licenseText",
                            Name = "Artistic License 2.0",
                            OsiApproved = true,
                            SPDX = "Artistic-2.0"
                        },
                        new
                        {
                            Id = 38,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Bahyph.html#licenseText",
                            Name = "Bahyph License",
                            OsiApproved = false,
                            SPDX = "Bahyph"
                        },
                        new
                        {
                            Id = 39,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Barr.html#licenseText",
                            Name = "Barr License",
                            OsiApproved = false,
                            SPDX = "Barr"
                        },
                        new
                        {
                            Id = 40,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Beerware.html#licenseText",
                            Name = "Beerware License",
                            OsiApproved = false,
                            SPDX = "Beerware"
                        },
                        new
                        {
                            Id = 41,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BitTorrent-1.0.html#licenseText",
                            Name = "BitTorrent Open Source License v1.0",
                            OsiApproved = false,
                            SPDX = "BitTorrent-1.0"
                        },
                        new
                        {
                            Id = 42,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/BitTorrent-1.1.html#licenseText",
                            Name = "BitTorrent Open Source License v1.1",
                            OsiApproved = false,
                            SPDX = "BitTorrent-1.1"
                        },
                        new
                        {
                            Id = 43,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Borceux.html#licenseText",
                            Name = "Borceux license",
                            OsiApproved = false,
                            SPDX = "Borceux"
                        },
                        new
                        {
                            Id = 44,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-1-Clause.html#licenseText",
                            Name = "BSD 1-Clause License",
                            OsiApproved = false,
                            SPDX = "BSD-1-Clause"
                        },
                        new
                        {
                            Id = 45,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-2-Clause.html#licenseText",
                            Name = "BSD 2-Clause \"Simplified\" License",
                            OsiApproved = true,
                            SPDX = "BSD-2-Clause"
                        },
                        new
                        {
                            Id = 46,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/BSD-2-Clause-FreeBSD.html#licenseText",
                            Name = "BSD 2-Clause FreeBSD License",
                            OsiApproved = false,
                            SPDX = "BSD-2-Clause-FreeBSD"
                        },
                        new
                        {
                            Id = 47,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-2-Clause-NetBSD.html#licenseText",
                            Name = "BSD 2-Clause NetBSD License",
                            OsiApproved = false,
                            SPDX = "BSD-2-Clause-NetBSD"
                        },
                        new
                        {
                            Id = 48,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-2-Clause-Patent.html#licenseText",
                            Name = "BSD-2-Clause Plus Patent License",
                            OsiApproved = true,
                            SPDX = "BSD-2-Clause-Patent"
                        },
                        new
                        {
                            Id = 49,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/BSD-3-Clause.html#licenseText",
                            Name = "BSD 3-Clause \"New\" or \"Revised\" License",
                            OsiApproved = true,
                            SPDX = "BSD-3-Clause"
                        },
                        new
                        {
                            Id = 50,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-3-Clause-Attribution.html#licenseText",
                            Name = "BSD with attribution",
                            OsiApproved = false,
                            SPDX = "BSD-3-Clause-Attribution"
                        },
                        new
                        {
                            Id = 51,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/BSD-3-Clause-Clear.html#licenseText",
                            Name = "BSD 3-Clause Clear License",
                            OsiApproved = false,
                            SPDX = "BSD-3-Clause-Clear"
                        },
                        new
                        {
                            Id = 52,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-3-Clause-LBNL.html#licenseText",
                            Name = "Lawrence Berkeley National Labs BSD variant license",
                            OsiApproved = false,
                            SPDX = "BSD-3-Clause-LBNL"
                        },
                        new
                        {
                            Id = 53,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-3-Clause-No-Nuclear-License.html#licenseText",
                            Name = "BSD 3-Clause No Nuclear License",
                            OsiApproved = false,
                            SPDX = "BSD-3-Clause-No-Nuclear-License"
                        },
                        new
                        {
                            Id = 54,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-3-Clause-No-Nuclear-License-2014.html#licenseText",
                            Name = "BSD 3-Clause No Nuclear License 2014",
                            OsiApproved = false,
                            SPDX = "BSD-3-Clause-No-Nuclear-License-2014"
                        },
                        new
                        {
                            Id = 55,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-3-Clause-No-Nuclear-Warranty.html#licenseText",
                            Name = "BSD 3-Clause No Nuclear Warranty",
                            OsiApproved = false,
                            SPDX = "BSD-3-Clause-No-Nuclear-Warranty"
                        },
                        new
                        {
                            Id = 56,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/BSD-4-Clause.html#licenseText",
                            Name = "BSD 4-Clause \"Original\" or \"Old\" License",
                            OsiApproved = false,
                            SPDX = "BSD-4-Clause"
                        },
                        new
                        {
                            Id = 57,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-4-Clause-UC.html#licenseText",
                            Name = "BSD-4-Clause (University of California-Specific)",
                            OsiApproved = false,
                            SPDX = "BSD-4-Clause-UC"
                        },
                        new
                        {
                            Id = 58,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-Protection.html#licenseText",
                            Name = "BSD Protection License",
                            OsiApproved = false,
                            SPDX = "BSD-Protection"
                        },
                        new
                        {
                            Id = 59,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/BSD-Source-Code.html#licenseText",
                            Name = "BSD Source Code Attribution",
                            OsiApproved = false,
                            SPDX = "BSD-Source-Code"
                        },
                        new
                        {
                            Id = 60,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/BSL-1.0.html#licenseText",
                            Name = "Boost Software License 1.0",
                            OsiApproved = true,
                            SPDX = "BSL-1.0"
                        },
                        new
                        {
                            Id = 61,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/bzip2-1.0.5.html#licenseText",
                            Name = "bzip2 and libbzip2 License v1.0.5",
                            OsiApproved = false,
                            SPDX = "bzip2-1.0.5"
                        },
                        new
                        {
                            Id = 62,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/bzip2-1.0.6.html#licenseText",
                            Name = "bzip2 and libbzip2 License v1.0.6",
                            OsiApproved = false,
                            SPDX = "bzip2-1.0.6"
                        },
                        new
                        {
                            Id = 63,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Caldera.html#licenseText",
                            Name = "Caldera License",
                            OsiApproved = false,
                            SPDX = "Caldera"
                        },
                        new
                        {
                            Id = 64,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CATOSL-1.1.html#licenseText",
                            Name = "Computer Associates Trusted Open Source License 1.1",
                            OsiApproved = true,
                            SPDX = "CATOSL-1.1"
                        },
                        new
                        {
                            Id = 65,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-1.0.html#licenseText",
                            Name = "Creative Commons Attribution 1.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-1.0"
                        },
                        new
                        {
                            Id = 66,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-2.0.html#licenseText",
                            Name = "Creative Commons Attribution 2.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-2.0"
                        },
                        new
                        {
                            Id = 67,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-2.5.html#licenseText",
                            Name = "Creative Commons Attribution 2.5 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-2.5"
                        },
                        new
                        {
                            Id = 68,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-3.0.html#licenseText",
                            Name = "Creative Commons Attribution 3.0 Unported",
                            OsiApproved = false,
                            SPDX = "CC-BY-3.0"
                        },
                        new
                        {
                            Id = 69,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CC-BY-4.0.html#licenseText",
                            Name = "Creative Commons Attribution 4.0 International",
                            OsiApproved = false,
                            SPDX = "CC-BY-4.0"
                        },
                        new
                        {
                            Id = 70,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-1.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial 1.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-1.0"
                        },
                        new
                        {
                            Id = 71,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-2.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial 2.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-2.0"
                        },
                        new
                        {
                            Id = 72,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-2.5.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial 2.5 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-2.5"
                        },
                        new
                        {
                            Id = 73,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-3.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial 3.0 Unported",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-3.0"
                        },
                        new
                        {
                            Id = 74,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-4.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial 4.0 International",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-4.0"
                        },
                        new
                        {
                            Id = 75,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-ND-1.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial No Derivatives 1.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-ND-1.0"
                        },
                        new
                        {
                            Id = 76,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-ND-2.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial No Derivatives 2.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-ND-2.0"
                        },
                        new
                        {
                            Id = 77,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-ND-2.5.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial No Derivatives 2.5 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-ND-2.5"
                        },
                        new
                        {
                            Id = 78,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-ND-3.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial No Derivatives 3.0 Unported",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-ND-3.0"
                        },
                        new
                        {
                            Id = 79,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-ND-4.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial No Derivatives 4.0 International",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-ND-4.0"
                        },
                        new
                        {
                            Id = 80,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-SA-1.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial Share Alike 1.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-SA-1.0"
                        },
                        new
                        {
                            Id = 81,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-SA-2.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial Share Alike 2.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-SA-2.0"
                        },
                        new
                        {
                            Id = 82,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-SA-2.5.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial Share Alike 2.5 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-SA-2.5"
                        },
                        new
                        {
                            Id = 83,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-SA-3.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial Share Alike 3.0 Unported",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-SA-3.0"
                        },
                        new
                        {
                            Id = 84,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-NC-SA-4.0.html#licenseText",
                            Name = "Creative Commons Attribution Non Commercial Share Alike 4.0 International",
                            OsiApproved = false,
                            SPDX = "CC-BY-NC-SA-4.0"
                        },
                        new
                        {
                            Id = 85,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-ND-1.0.html#licenseText",
                            Name = "Creative Commons Attribution No Derivatives 1.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-ND-1.0"
                        },
                        new
                        {
                            Id = 86,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-ND-2.0.html#licenseText",
                            Name = "Creative Commons Attribution No Derivatives 2.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-ND-2.0"
                        },
                        new
                        {
                            Id = 87,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-ND-2.5.html#licenseText",
                            Name = "Creative Commons Attribution No Derivatives 2.5 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-ND-2.5"
                        },
                        new
                        {
                            Id = 88,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-ND-3.0.html#licenseText",
                            Name = "Creative Commons Attribution No Derivatives 3.0 Unported",
                            OsiApproved = false,
                            SPDX = "CC-BY-ND-3.0"
                        },
                        new
                        {
                            Id = 89,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-ND-4.0.html#licenseText",
                            Name = "Creative Commons Attribution No Derivatives 4.0 International",
                            OsiApproved = false,
                            SPDX = "CC-BY-ND-4.0"
                        },
                        new
                        {
                            Id = 90,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-SA-1.0.html#licenseText",
                            Name = "Creative Commons Attribution Share Alike 1.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-SA-1.0"
                        },
                        new
                        {
                            Id = 91,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-SA-2.0.html#licenseText",
                            Name = "Creative Commons Attribution Share Alike 2.0 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-SA-2.0"
                        },
                        new
                        {
                            Id = 92,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-SA-2.5.html#licenseText",
                            Name = "Creative Commons Attribution Share Alike 2.5 Generic",
                            OsiApproved = false,
                            SPDX = "CC-BY-SA-2.5"
                        },
                        new
                        {
                            Id = 93,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CC-BY-SA-3.0.html#licenseText",
                            Name = "Creative Commons Attribution Share Alike 3.0 Unported",
                            OsiApproved = false,
                            SPDX = "CC-BY-SA-3.0"
                        },
                        new
                        {
                            Id = 94,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CC-BY-SA-4.0.html#licenseText",
                            Name = "Creative Commons Attribution Share Alike 4.0 International",
                            OsiApproved = false,
                            SPDX = "CC-BY-SA-4.0"
                        },
                        new
                        {
                            Id = 95,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CC0-1.0.html#licenseText",
                            Name = "Creative Commons Zero v1.0 Universal",
                            OsiApproved = false,
                            SPDX = "CC0-1.0"
                        },
                        new
                        {
                            Id = 96,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CDDL-1.0.html#licenseText",
                            Name = "Common Development and Distribution License 1.0",
                            OsiApproved = true,
                            SPDX = "CDDL-1.0"
                        },
                        new
                        {
                            Id = 97,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CDDL-1.1.html#licenseText",
                            Name = "Common Development and Distribution License 1.1",
                            OsiApproved = false,
                            SPDX = "CDDL-1.1"
                        },
                        new
                        {
                            Id = 98,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CDLA-Permissive-1.0.html#licenseText",
                            Name = "Community Data License Agreement Permissive 1.0",
                            OsiApproved = false,
                            SPDX = "CDLA-Permissive-1.0"
                        },
                        new
                        {
                            Id = 99,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CDLA-Sharing-1.0.html#licenseText",
                            Name = "Community Data License Agreement Sharing 1.0",
                            OsiApproved = false,
                            SPDX = "CDLA-Sharing-1.0"
                        },
                        new
                        {
                            Id = 100,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CECILL-1.0.html#licenseText",
                            Name = "CeCILL Free Software License Agreement v1.0",
                            OsiApproved = false,
                            SPDX = "CECILL-1.0"
                        },
                        new
                        {
                            Id = 101,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CECILL-1.1.html#licenseText",
                            Name = "CeCILL Free Software License Agreement v1.1",
                            OsiApproved = false,
                            SPDX = "CECILL-1.1"
                        },
                        new
                        {
                            Id = 102,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CECILL-2.0.html#licenseText",
                            Name = "CeCILL Free Software License Agreement v2.0",
                            OsiApproved = false,
                            SPDX = "CECILL-2.0"
                        },
                        new
                        {
                            Id = 103,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CECILL-2.1.html#licenseText",
                            Name = "CeCILL Free Software License Agreement v2.1",
                            OsiApproved = true,
                            SPDX = "CECILL-2.1"
                        },
                        new
                        {
                            Id = 104,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CECILL-B.html#licenseText",
                            Name = "CeCILL-B Free Software License Agreement",
                            OsiApproved = false,
                            SPDX = "CECILL-B"
                        },
                        new
                        {
                            Id = 105,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CECILL-C.html#licenseText",
                            Name = "CeCILL-C Free Software License Agreement",
                            OsiApproved = false,
                            SPDX = "CECILL-C"
                        },
                        new
                        {
                            Id = 106,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CERN-OHL-1.1.html#licenseText",
                            Name = "CERN Open Hardware License v1.1",
                            OsiApproved = false,
                            SPDX = "CERN-OHL-1.1"
                        },
                        new
                        {
                            Id = 107,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CERN-OHL-1.2.html#licenseText",
                            Name = "CERN Open Hardware Licence v1.2",
                            OsiApproved = false,
                            SPDX = "CERN-OHL-1.2"
                        },
                        new
                        {
                            Id = 108,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/ClArtistic.html#licenseText",
                            Name = "Clarified Artistic License",
                            OsiApproved = false,
                            SPDX = "ClArtistic"
                        },
                        new
                        {
                            Id = 109,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CNRI-Jython.html#licenseText",
                            Name = "CNRI Jython License",
                            OsiApproved = false,
                            SPDX = "CNRI-Jython"
                        },
                        new
                        {
                            Id = 110,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CNRI-Python.html#licenseText",
                            Name = "CNRI Python License",
                            OsiApproved = true,
                            SPDX = "CNRI-Python"
                        },
                        new
                        {
                            Id = 111,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CNRI-Python-GPL-Compatible.html#licenseText",
                            Name = "CNRI Python Open Source GPL Compatible License Agreement",
                            OsiApproved = false,
                            SPDX = "CNRI-Python-GPL-Compatible"
                        },
                        new
                        {
                            Id = 112,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Condor-1.1.html#licenseText",
                            Name = "Condor Public License v1.1",
                            OsiApproved = false,
                            SPDX = "Condor-1.1"
                        },
                        new
                        {
                            Id = 113,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/copyleft-next-0.3.0.html#licenseText",
                            Name = "copyleft-next 0.3.0",
                            OsiApproved = false,
                            SPDX = "copyleft-next-0.3.0"
                        },
                        new
                        {
                            Id = 114,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/copyleft-next-0.3.1.html#licenseText",
                            Name = "copyleft-next 0.3.1",
                            OsiApproved = false,
                            SPDX = "copyleft-next-0.3.1"
                        },
                        new
                        {
                            Id = 115,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CPAL-1.0.html#licenseText",
                            Name = "Common Public Attribution License 1.0",
                            OsiApproved = true,
                            SPDX = "CPAL-1.0"
                        },
                        new
                        {
                            Id = 116,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/CPL-1.0.html#licenseText",
                            Name = "Common Public License 1.0",
                            OsiApproved = true,
                            SPDX = "CPL-1.0"
                        },
                        new
                        {
                            Id = 117,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CPOL-1.02.html#licenseText",
                            Name = "Code Project Open License 1.02",
                            OsiApproved = false,
                            SPDX = "CPOL-1.02"
                        },
                        new
                        {
                            Id = 118,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Crossword.html#licenseText",
                            Name = "Crossword License",
                            OsiApproved = false,
                            SPDX = "Crossword"
                        },
                        new
                        {
                            Id = 119,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CrystalStacker.html#licenseText",
                            Name = "CrystalStacker License",
                            OsiApproved = false,
                            SPDX = "CrystalStacker"
                        },
                        new
                        {
                            Id = 120,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/CUA-OPL-1.0.html#licenseText",
                            Name = "CUA Office Public License v1.0",
                            OsiApproved = true,
                            SPDX = "CUA-OPL-1.0"
                        },
                        new
                        {
                            Id = 121,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Cube.html#licenseText",
                            Name = "Cube License",
                            OsiApproved = false,
                            SPDX = "Cube"
                        },
                        new
                        {
                            Id = 122,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/curl.html#licenseText",
                            Name = "curl License",
                            OsiApproved = false,
                            SPDX = "curl"
                        },
                        new
                        {
                            Id = 123,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/D-FSL-1.0.html#licenseText",
                            Name = "Deutsche Freie Software Lizenz",
                            OsiApproved = false,
                            SPDX = "D-FSL-1.0"
                        },
                        new
                        {
                            Id = 124,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/diffmark.html#licenseText",
                            Name = "diffmark license",
                            OsiApproved = false,
                            SPDX = "diffmark"
                        },
                        new
                        {
                            Id = 125,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/DOC.html#licenseText",
                            Name = "DOC License",
                            OsiApproved = false,
                            SPDX = "DOC"
                        },
                        new
                        {
                            Id = 126,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Dotseqn.html#licenseText",
                            Name = "Dotseqn License",
                            OsiApproved = false,
                            SPDX = "Dotseqn"
                        },
                        new
                        {
                            Id = 127,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/DSDP.html#licenseText",
                            Name = "DSDP License",
                            OsiApproved = false,
                            SPDX = "DSDP"
                        },
                        new
                        {
                            Id = 128,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/dvipdfm.html#licenseText",
                            Name = "dvipdfm License",
                            OsiApproved = false,
                            SPDX = "dvipdfm"
                        },
                        new
                        {
                            Id = 129,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/ECL-1.0.html#licenseText",
                            Name = "Educational Community License v1.0",
                            OsiApproved = true,
                            SPDX = "ECL-1.0"
                        },
                        new
                        {
                            Id = 130,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/ECL-2.0.html#licenseText",
                            Name = "Educational Community License v2.0",
                            OsiApproved = true,
                            SPDX = "ECL-2.0"
                        },
                        new
                        {
                            Id = 131,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/EFL-1.0.html#licenseText",
                            Name = "Eiffel Forum License v1.0",
                            OsiApproved = true,
                            SPDX = "EFL-1.0"
                        },
                        new
                        {
                            Id = 132,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/EFL-2.0.html#licenseText",
                            Name = "Eiffel Forum License v2.0",
                            OsiApproved = true,
                            SPDX = "EFL-2.0"
                        },
                        new
                        {
                            Id = 133,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/eGenix.html#licenseText",
                            Name = "eGenix.com Public License 1.1.0",
                            OsiApproved = false,
                            SPDX = "eGenix"
                        },
                        new
                        {
                            Id = 134,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Entessa.html#licenseText",
                            Name = "Entessa Public License v1.0",
                            OsiApproved = true,
                            SPDX = "Entessa"
                        },
                        new
                        {
                            Id = 135,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/EPL-1.0.html#licenseText",
                            Name = "Eclipse Public License 1.0",
                            OsiApproved = true,
                            SPDX = "EPL-1.0"
                        },
                        new
                        {
                            Id = 136,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/EPL-2.0.html#licenseText",
                            Name = "Eclipse Public License 2.0",
                            OsiApproved = true,
                            SPDX = "EPL-2.0"
                        },
                        new
                        {
                            Id = 137,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/ErlPL-1.1.html#licenseText",
                            Name = "Erlang Public License v1.1",
                            OsiApproved = false,
                            SPDX = "ErlPL-1.1"
                        },
                        new
                        {
                            Id = 138,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/EUDatagrid.html#licenseText",
                            Name = "EU DataGrid Software License",
                            OsiApproved = true,
                            SPDX = "EUDatagrid"
                        },
                        new
                        {
                            Id = 139,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/EUPL-1.0.html#licenseText",
                            Name = "European Union Public License 1.0",
                            OsiApproved = false,
                            SPDX = "EUPL-1.0"
                        },
                        new
                        {
                            Id = 140,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/EUPL-1.1.html#licenseText",
                            Name = "European Union Public License 1.1",
                            OsiApproved = true,
                            SPDX = "EUPL-1.1"
                        },
                        new
                        {
                            Id = 141,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/EUPL-1.2.html#licenseText",
                            Name = "European Union Public License 1.2",
                            OsiApproved = true,
                            SPDX = "EUPL-1.2"
                        },
                        new
                        {
                            Id = 142,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Eurosym.html#licenseText",
                            Name = "Eurosym License",
                            OsiApproved = false,
                            SPDX = "Eurosym"
                        },
                        new
                        {
                            Id = 143,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Fair.html#licenseText",
                            Name = "Fair License",
                            OsiApproved = true,
                            SPDX = "Fair"
                        },
                        new
                        {
                            Id = 144,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Frameworx-1.0.html#licenseText",
                            Name = "Frameworx Open License 1.0",
                            OsiApproved = true,
                            SPDX = "Frameworx-1.0"
                        },
                        new
                        {
                            Id = 145,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/FreeImage.html#licenseText",
                            Name = "FreeImage Public License v1.0",
                            OsiApproved = false,
                            SPDX = "FreeImage"
                        },
                        new
                        {
                            Id = 146,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/FSFAP.html#licenseText",
                            Name = "FSF All Permissive License",
                            OsiApproved = false,
                            SPDX = "FSFAP"
                        },
                        new
                        {
                            Id = 147,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/FSFUL.html#licenseText",
                            Name = "FSF Unlimited License",
                            OsiApproved = false,
                            SPDX = "FSFUL"
                        },
                        new
                        {
                            Id = 148,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/FSFULLR.html#licenseText",
                            Name = "FSF Unlimited License (with License Retention)",
                            OsiApproved = false,
                            SPDX = "FSFULLR"
                        },
                        new
                        {
                            Id = 149,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/FTL.html#licenseText",
                            Name = "Freetype Project License",
                            OsiApproved = false,
                            SPDX = "FTL"
                        },
                        new
                        {
                            Id = 150,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GFDL-1.1-only.html#licenseText",
                            Name = "GNU Free Documentation License v1.1 only",
                            OsiApproved = false,
                            SPDX = "GFDL-1.1-only"
                        },
                        new
                        {
                            Id = 151,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GFDL-1.1-or-later.html#licenseText",
                            Name = "GNU Free Documentation License v1.1 or later",
                            OsiApproved = false,
                            SPDX = "GFDL-1.1-or-later"
                        },
                        new
                        {
                            Id = 152,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GFDL-1.2-only.html#licenseText",
                            Name = "GNU Free Documentation License v1.2 only",
                            OsiApproved = false,
                            SPDX = "GFDL-1.2-only"
                        },
                        new
                        {
                            Id = 153,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GFDL-1.2-or-later.html#licenseText",
                            Name = "GNU Free Documentation License v1.2 or later",
                            OsiApproved = false,
                            SPDX = "GFDL-1.2-or-later"
                        },
                        new
                        {
                            Id = 154,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GFDL-1.3-only.html#licenseText",
                            Name = "GNU Free Documentation License v1.3 only",
                            OsiApproved = false,
                            SPDX = "GFDL-1.3-only"
                        },
                        new
                        {
                            Id = 155,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GFDL-1.3-or-later.html#licenseText",
                            Name = "GNU Free Documentation License v1.3 or later",
                            OsiApproved = false,
                            SPDX = "GFDL-1.3-or-later"
                        },
                        new
                        {
                            Id = 156,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Giftware.html#licenseText",
                            Name = "Giftware License",
                            OsiApproved = false,
                            SPDX = "Giftware"
                        },
                        new
                        {
                            Id = 157,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/GL2PS.html#licenseText",
                            Name = "GL2PS License",
                            OsiApproved = false,
                            SPDX = "GL2PS"
                        },
                        new
                        {
                            Id = 158,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Glide.html#licenseText",
                            Name = "3dfx Glide License",
                            OsiApproved = false,
                            SPDX = "Glide"
                        },
                        new
                        {
                            Id = 159,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Glulxe.html#licenseText",
                            Name = "Glulxe License",
                            OsiApproved = false,
                            SPDX = "Glulxe"
                        },
                        new
                        {
                            Id = 160,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/gnuplot.html#licenseText",
                            Name = "gnuplot License",
                            OsiApproved = false,
                            SPDX = "gnuplot"
                        },
                        new
                        {
                            Id = 161,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/GPL-1.0-only.html#licenseText",
                            Name = "GNU General Public License v1.0 only",
                            OsiApproved = false,
                            SPDX = "GPL-1.0-only"
                        },
                        new
                        {
                            Id = 162,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/GPL-1.0-or-later.html#licenseText",
                            Name = "GNU General Public License v1.0 or later",
                            OsiApproved = false,
                            SPDX = "GPL-1.0-or-later"
                        },
                        new
                        {
                            Id = 163,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GPL-2.0-only.html#licenseText",
                            Name = "GNU General Public License v2.0 only",
                            OsiApproved = true,
                            SPDX = "GPL-2.0-only"
                        },
                        new
                        {
                            Id = 164,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GPL-2.0-or-later.html#licenseText",
                            Name = "GNU General Public License v2.0 or later",
                            OsiApproved = true,
                            SPDX = "GPL-2.0-or-later"
                        },
                        new
                        {
                            Id = 165,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GPL-3.0-only.html#licenseText",
                            Name = "GNU General Public License v3.0 only",
                            OsiApproved = true,
                            SPDX = "GPL-3.0-only"
                        },
                        new
                        {
                            Id = 166,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/GPL-3.0-or-later.html#licenseText",
                            Name = "GNU General Public License v3.0 or later",
                            OsiApproved = true,
                            SPDX = "GPL-3.0-or-later"
                        },
                        new
                        {
                            Id = 167,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/gSOAP-1.3b.html#licenseText",
                            Name = "gSOAP Public License v1.3b",
                            OsiApproved = false,
                            SPDX = "gSOAP-1.3b"
                        },
                        new
                        {
                            Id = 168,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/HaskellReport.html#licenseText",
                            Name = "Haskell Language Report License",
                            OsiApproved = false,
                            SPDX = "HaskellReport"
                        },
                        new
                        {
                            Id = 169,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/HPND.html#licenseText",
                            Name = "Historical Permission Notice and Disclaimer",
                            OsiApproved = true,
                            SPDX = "HPND"
                        },
                        new
                        {
                            Id = 170,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/HPND-sell-variant.html#licenseText",
                            Name = "Historical Permission Notice and Disclaimer - sell variant",
                            OsiApproved = false,
                            SPDX = "HPND-sell-variant"
                        },
                        new
                        {
                            Id = 171,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/IBM-pibs.html#licenseText",
                            Name = "IBM PowerPC Initialization and Boot Software",
                            OsiApproved = false,
                            SPDX = "IBM-pibs"
                        },
                        new
                        {
                            Id = 172,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/ICU.html#licenseText",
                            Name = "ICU License",
                            OsiApproved = false,
                            SPDX = "ICU"
                        },
                        new
                        {
                            Id = 173,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/IJG.html#licenseText",
                            Name = "Independent JPEG Group License",
                            OsiApproved = false,
                            SPDX = "IJG"
                        },
                        new
                        {
                            Id = 174,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/ImageMagick.html#licenseText",
                            Name = "ImageMagick License",
                            OsiApproved = false,
                            SPDX = "ImageMagick"
                        },
                        new
                        {
                            Id = 175,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/iMatix.html#licenseText",
                            Name = "iMatix Standard Function Library Agreement",
                            OsiApproved = false,
                            SPDX = "iMatix"
                        },
                        new
                        {
                            Id = 176,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Imlib2.html#licenseText",
                            Name = "Imlib2 License",
                            OsiApproved = false,
                            SPDX = "Imlib2"
                        },
                        new
                        {
                            Id = 177,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Info-ZIP.html#licenseText",
                            Name = "Info-ZIP License",
                            OsiApproved = false,
                            SPDX = "Info-ZIP"
                        },
                        new
                        {
                            Id = 178,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Intel.html#licenseText",
                            Name = "Intel Open Source License",
                            OsiApproved = true,
                            SPDX = "Intel"
                        },
                        new
                        {
                            Id = 179,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Intel-ACPI.html#licenseText",
                            Name = "Intel ACPI Software License Agreement",
                            OsiApproved = false,
                            SPDX = "Intel-ACPI"
                        },
                        new
                        {
                            Id = 180,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Interbase-1.0.html#licenseText",
                            Name = "Interbase Public License v1.0",
                            OsiApproved = false,
                            SPDX = "Interbase-1.0"
                        },
                        new
                        {
                            Id = 181,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/IPA.html#licenseText",
                            Name = "IPA Font License",
                            OsiApproved = true,
                            SPDX = "IPA"
                        },
                        new
                        {
                            Id = 182,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/IPL-1.0.html#licenseText",
                            Name = "IBM Public License v1.0",
                            OsiApproved = true,
                            SPDX = "IPL-1.0"
                        },
                        new
                        {
                            Id = 183,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/ISC.html#licenseText",
                            Name = "ISC License",
                            OsiApproved = true,
                            SPDX = "ISC"
                        },
                        new
                        {
                            Id = 184,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/JasPer-2.0.html#licenseText",
                            Name = "JasPer License",
                            OsiApproved = false,
                            SPDX = "JasPer-2.0"
                        },
                        new
                        {
                            Id = 185,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/JPNIC.html#licenseText",
                            Name = "Japan Network Information Center License",
                            OsiApproved = false,
                            SPDX = "JPNIC"
                        },
                        new
                        {
                            Id = 186,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/JSON.html#licenseText",
                            Name = "JSON License",
                            OsiApproved = false,
                            SPDX = "JSON"
                        },
                        new
                        {
                            Id = 187,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LAL-1.2.html#licenseText",
                            Name = "Licence Art Libre 1.2",
                            OsiApproved = false,
                            SPDX = "LAL-1.2"
                        },
                        new
                        {
                            Id = 188,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LAL-1.3.html#licenseText",
                            Name = "Licence Art Libre 1.3",
                            OsiApproved = false,
                            SPDX = "LAL-1.3"
                        },
                        new
                        {
                            Id = 189,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Latex2e.html#licenseText",
                            Name = "Latex2e License",
                            OsiApproved = false,
                            SPDX = "Latex2e"
                        },
                        new
                        {
                            Id = 190,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Leptonica.html#licenseText",
                            Name = "Leptonica License",
                            OsiApproved = false,
                            SPDX = "Leptonica"
                        },
                        new
                        {
                            Id = 191,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LGPL-2.0-only.html#licenseText",
                            Name = "GNU Library General Public License v2 only",
                            OsiApproved = true,
                            SPDX = "LGPL-2.0-only"
                        },
                        new
                        {
                            Id = 192,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LGPL-2.0-or-later.html#licenseText",
                            Name = "GNU Library General Public License v2 or later",
                            OsiApproved = true,
                            SPDX = "LGPL-2.0-or-later"
                        },
                        new
                        {
                            Id = 193,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/LGPL-2.1-only.html#licenseText",
                            Name = "GNU Lesser General Public License v2.1 only",
                            OsiApproved = true,
                            SPDX = "LGPL-2.1-only"
                        },
                        new
                        {
                            Id = 194,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/LGPL-2.1-or-later.html#licenseText",
                            Name = "GNU Lesser General Public License v2.1 or later",
                            OsiApproved = true,
                            SPDX = "LGPL-2.1-or-later"
                        },
                        new
                        {
                            Id = 195,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/LGPL-3.0-only.html#licenseText",
                            Name = "GNU Lesser General Public License v3.0 only",
                            OsiApproved = true,
                            SPDX = "LGPL-3.0-only"
                        },
                        new
                        {
                            Id = 196,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/LGPL-3.0-or-later.html#licenseText",
                            Name = "GNU Lesser General Public License v3.0 or later",
                            OsiApproved = true,
                            SPDX = "LGPL-3.0-or-later"
                        },
                        new
                        {
                            Id = 197,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LGPLLR.html#licenseText",
                            Name = "Lesser General Public License For Linguistic Resources",
                            OsiApproved = false,
                            SPDX = "LGPLLR"
                        },
                        new
                        {
                            Id = 198,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Libpng.html#licenseText",
                            Name = "libpng License",
                            OsiApproved = false,
                            SPDX = "Libpng"
                        },
                        new
                        {
                            Id = 199,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/libpng-2.0.html#licenseText",
                            Name = "PNG Reference Library version 2",
                            OsiApproved = false,
                            SPDX = "libpng-2.0"
                        },
                        new
                        {
                            Id = 200,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/libtiff.html#licenseText",
                            Name = "libtiff License",
                            OsiApproved = false,
                            SPDX = "libtiff"
                        },
                        new
                        {
                            Id = 201,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LiLiQ-P-1.1.html#licenseText",
                            Name = "Licence Libre du Québec – Permissive version 1.1",
                            OsiApproved = true,
                            SPDX = "LiLiQ-P-1.1"
                        },
                        new
                        {
                            Id = 202,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LiLiQ-R-1.1.html#licenseText",
                            Name = "Licence Libre du Québec – Réciprocité version 1.1",
                            OsiApproved = true,
                            SPDX = "LiLiQ-R-1.1"
                        },
                        new
                        {
                            Id = 203,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LiLiQ-Rplus-1.1.html#licenseText",
                            Name = "Licence Libre du Québec – Réciprocité forte version 1.1",
                            OsiApproved = true,
                            SPDX = "LiLiQ-Rplus-1.1"
                        },
                        new
                        {
                            Id = 204,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Linux-OpenIB.html#licenseText",
                            Name = "Linux Kernel Variant of OpenIB.org license",
                            OsiApproved = false,
                            SPDX = "Linux-OpenIB"
                        },
                        new
                        {
                            Id = 205,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LPL-1.0.html#licenseText",
                            Name = "Lucent Public License Version 1.0",
                            OsiApproved = true,
                            SPDX = "LPL-1.0"
                        },
                        new
                        {
                            Id = 206,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/LPL-1.02.html#licenseText",
                            Name = "Lucent Public License v1.02",
                            OsiApproved = true,
                            SPDX = "LPL-1.02"
                        },
                        new
                        {
                            Id = 207,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LPPL-1.0.html#licenseText",
                            Name = "LaTeX Project Public License v1.0",
                            OsiApproved = false,
                            SPDX = "LPPL-1.0"
                        },
                        new
                        {
                            Id = 208,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LPPL-1.1.html#licenseText",
                            Name = "LaTeX Project Public License v1.1",
                            OsiApproved = false,
                            SPDX = "LPPL-1.1"
                        },
                        new
                        {
                            Id = 209,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/LPPL-1.2.html#licenseText",
                            Name = "LaTeX Project Public License v1.2",
                            OsiApproved = false,
                            SPDX = "LPPL-1.2"
                        },
                        new
                        {
                            Id = 210,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/LPPL-1.3a.html#licenseText",
                            Name = "LaTeX Project Public License v1.3a",
                            OsiApproved = false,
                            SPDX = "LPPL-1.3a"
                        },
                        new
                        {
                            Id = 211,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/LPPL-1.3c.html#licenseText",
                            Name = "LaTeX Project Public License v1.3c",
                            OsiApproved = true,
                            SPDX = "LPPL-1.3c"
                        },
                        new
                        {
                            Id = 212,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MakeIndex.html#licenseText",
                            Name = "MakeIndex License",
                            OsiApproved = false,
                            SPDX = "MakeIndex"
                        },
                        new
                        {
                            Id = 213,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MirOS.html#licenseText",
                            Name = "MirOS License",
                            OsiApproved = true,
                            SPDX = "MirOS"
                        },
                        new
                        {
                            Id = 214,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/MIT.html#licenseText",
                            Name = "MIT License",
                            OsiApproved = true,
                            SPDX = "MIT"
                        },
                        new
                        {
                            Id = 215,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MIT-0.html#licenseText",
                            Name = "MIT No Attribution",
                            OsiApproved = true,
                            SPDX = "MIT-0"
                        },
                        new
                        {
                            Id = 216,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MIT-advertising.html#licenseText",
                            Name = "Enlightenment License (e16)",
                            OsiApproved = false,
                            SPDX = "MIT-advertising"
                        },
                        new
                        {
                            Id = 217,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MIT-CMU.html#licenseText",
                            Name = "CMU License",
                            OsiApproved = false,
                            SPDX = "MIT-CMU"
                        },
                        new
                        {
                            Id = 218,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MIT-enna.html#licenseText",
                            Name = "enna License",
                            OsiApproved = false,
                            SPDX = "MIT-enna"
                        },
                        new
                        {
                            Id = 219,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MIT-feh.html#licenseText",
                            Name = "feh License",
                            OsiApproved = false,
                            SPDX = "MIT-feh"
                        },
                        new
                        {
                            Id = 220,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MITNFA.html#licenseText",
                            Name = "MIT +no-false-attribs license",
                            OsiApproved = false,
                            SPDX = "MITNFA"
                        },
                        new
                        {
                            Id = 221,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Motosoto.html#licenseText",
                            Name = "Motosoto License",
                            OsiApproved = true,
                            SPDX = "Motosoto"
                        },
                        new
                        {
                            Id = 222,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/mpich2.html#licenseText",
                            Name = "mpich2 License",
                            OsiApproved = false,
                            SPDX = "mpich2"
                        },
                        new
                        {
                            Id = 223,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MPL-1.0.html#licenseText",
                            Name = "Mozilla Public License 1.0",
                            OsiApproved = true,
                            SPDX = "MPL-1.0"
                        },
                        new
                        {
                            Id = 224,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/MPL-1.1.html#licenseText",
                            Name = "Mozilla Public License 1.1",
                            OsiApproved = true,
                            SPDX = "MPL-1.1"
                        },
                        new
                        {
                            Id = 225,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/MPL-2.0.html#licenseText",
                            Name = "Mozilla Public License 2.0",
                            OsiApproved = true,
                            SPDX = "MPL-2.0"
                        },
                        new
                        {
                            Id = 226,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MPL-2.0-no-copyleft-exception.html#licenseText",
                            Name = "Mozilla Public License 2.0 (no copyleft exception)",
                            OsiApproved = true,
                            SPDX = "MPL-2.0-no-copyleft-exception"
                        },
                        new
                        {
                            Id = 227,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/MS-PL.html#licenseText",
                            Name = "Microsoft Public License",
                            OsiApproved = true,
                            SPDX = "MS-PL"
                        },
                        new
                        {
                            Id = 228,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/MS-RL.html#licenseText",
                            Name = "Microsoft Reciprocal License",
                            OsiApproved = true,
                            SPDX = "MS-RL"
                        },
                        new
                        {
                            Id = 229,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/MTLL.html#licenseText",
                            Name = "Matrix Template Library License",
                            OsiApproved = false,
                            SPDX = "MTLL"
                        },
                        new
                        {
                            Id = 230,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Multics.html#licenseText",
                            Name = "Multics License",
                            OsiApproved = true,
                            SPDX = "Multics"
                        },
                        new
                        {
                            Id = 231,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Mup.html#licenseText",
                            Name = "Mup License",
                            OsiApproved = false,
                            SPDX = "Mup"
                        },
                        new
                        {
                            Id = 232,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NASA-1.3.html#licenseText",
                            Name = "NASA Open Source Agreement 1.3",
                            OsiApproved = true,
                            SPDX = "NASA-1.3"
                        },
                        new
                        {
                            Id = 233,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Naumen.html#licenseText",
                            Name = "Naumen Public License",
                            OsiApproved = true,
                            SPDX = "Naumen"
                        },
                        new
                        {
                            Id = 234,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NBPL-1.0.html#licenseText",
                            Name = "Net Boolean Public License v1",
                            OsiApproved = false,
                            SPDX = "NBPL-1.0"
                        },
                        new
                        {
                            Id = 235,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/NCSA.html#licenseText",
                            Name = "University of Illinois/NCSA Open Source License",
                            OsiApproved = true,
                            SPDX = "NCSA"
                        },
                        new
                        {
                            Id = 236,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Net-SNMP.html#licenseText",
                            Name = "Net-SNMP License",
                            OsiApproved = false,
                            SPDX = "Net-SNMP"
                        },
                        new
                        {
                            Id = 237,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NetCDF.html#licenseText",
                            Name = "NetCDF license",
                            OsiApproved = false,
                            SPDX = "NetCDF"
                        },
                        new
                        {
                            Id = 238,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Newsletr.html#licenseText",
                            Name = "Newsletr License",
                            OsiApproved = false,
                            SPDX = "Newsletr"
                        },
                        new
                        {
                            Id = 239,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NGPL.html#licenseText",
                            Name = "Nethack General Public License",
                            OsiApproved = true,
                            SPDX = "NGPL"
                        },
                        new
                        {
                            Id = 240,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NLOD-1.0.html#licenseText",
                            Name = "Norwegian Licence for Open Government Data",
                            OsiApproved = false,
                            SPDX = "NLOD-1.0"
                        },
                        new
                        {
                            Id = 241,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NLPL.html#licenseText",
                            Name = "No Limit Public License",
                            OsiApproved = false,
                            SPDX = "NLPL"
                        },
                        new
                        {
                            Id = 242,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Nokia.html#licenseText",
                            Name = "Nokia Open Source License",
                            OsiApproved = true,
                            SPDX = "Nokia"
                        },
                        new
                        {
                            Id = 243,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/NOSL.html#licenseText",
                            Name = "Netizen Open Source License",
                            OsiApproved = false,
                            SPDX = "NOSL"
                        },
                        new
                        {
                            Id = 244,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Noweb.html#licenseText",
                            Name = "Noweb License",
                            OsiApproved = false,
                            SPDX = "Noweb"
                        },
                        new
                        {
                            Id = 245,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/NPL-1.0.html#licenseText",
                            Name = "Netscape Public License v1.0",
                            OsiApproved = false,
                            SPDX = "NPL-1.0"
                        },
                        new
                        {
                            Id = 246,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/NPL-1.1.html#licenseText",
                            Name = "Netscape Public License v1.1",
                            OsiApproved = false,
                            SPDX = "NPL-1.1"
                        },
                        new
                        {
                            Id = 247,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NPOSL-3.0.html#licenseText",
                            Name = "Non-Profit Open Software License 3.0",
                            OsiApproved = true,
                            SPDX = "NPOSL-3.0"
                        },
                        new
                        {
                            Id = 248,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NRL.html#licenseText",
                            Name = "NRL License",
                            OsiApproved = false,
                            SPDX = "NRL"
                        },
                        new
                        {
                            Id = 249,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/NTP.html#licenseText",
                            Name = "NTP License",
                            OsiApproved = true,
                            SPDX = "NTP"
                        },
                        new
                        {
                            Id = 250,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OCCT-PL.html#licenseText",
                            Name = "Open CASCADE Technology Public License",
                            OsiApproved = false,
                            SPDX = "OCCT-PL"
                        },
                        new
                        {
                            Id = 251,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OCLC-2.0.html#licenseText",
                            Name = "OCLC Research Public License 2.0",
                            OsiApproved = true,
                            SPDX = "OCLC-2.0"
                        },
                        new
                        {
                            Id = 252,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/ODbL-1.0.html#licenseText",
                            Name = "ODC Open Database License v1.0",
                            OsiApproved = false,
                            SPDX = "ODbL-1.0"
                        },
                        new
                        {
                            Id = 253,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/ODC-By-1.0.html#licenseText",
                            Name = "Open Data Commons Attribution License v1.0",
                            OsiApproved = false,
                            SPDX = "ODC-By-1.0"
                        },
                        new
                        {
                            Id = 254,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OFL-1.0.html#licenseText",
                            Name = "SIL Open Font License 1.0",
                            OsiApproved = false,
                            SPDX = "OFL-1.0"
                        },
                        new
                        {
                            Id = 255,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OFL-1.1.html#licenseText",
                            Name = "SIL Open Font License 1.1",
                            OsiApproved = true,
                            SPDX = "OFL-1.1"
                        },
                        new
                        {
                            Id = 256,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OGL-UK-1.0.html#licenseText",
                            Name = "Open Government Licence v1.0",
                            OsiApproved = false,
                            SPDX = "OGL-UK-1.0"
                        },
                        new
                        {
                            Id = 257,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OGL-UK-2.0.html#licenseText",
                            Name = "Open Government Licence v2.0",
                            OsiApproved = false,
                            SPDX = "OGL-UK-2.0"
                        },
                        new
                        {
                            Id = 258,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OGL-UK-3.0.html#licenseText",
                            Name = "Open Government Licence v3.0",
                            OsiApproved = false,
                            SPDX = "OGL-UK-3.0"
                        },
                        new
                        {
                            Id = 259,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OGTSL.html#licenseText",
                            Name = "Open Group Test Suite License",
                            OsiApproved = true,
                            SPDX = "OGTSL"
                        },
                        new
                        {
                            Id = 260,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-1.1.html#licenseText",
                            Name = "Open LDAP Public License v1.1",
                            OsiApproved = false,
                            SPDX = "OLDAP-1.1"
                        },
                        new
                        {
                            Id = 261,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-1.2.html#licenseText",
                            Name = "Open LDAP Public License v1.2",
                            OsiApproved = false,
                            SPDX = "OLDAP-1.2"
                        },
                        new
                        {
                            Id = 262,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-1.3.html#licenseText",
                            Name = "Open LDAP Public License v1.3",
                            OsiApproved = false,
                            SPDX = "OLDAP-1.3"
                        },
                        new
                        {
                            Id = 263,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-1.4.html#licenseText",
                            Name = "Open LDAP Public License v1.4",
                            OsiApproved = false,
                            SPDX = "OLDAP-1.4"
                        },
                        new
                        {
                            Id = 264,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.0.html#licenseText",
                            Name = "Open LDAP Public License v2.0 (or possibly 2.0A and 2.0B)",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.0"
                        },
                        new
                        {
                            Id = 265,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.0.1.html#licenseText",
                            Name = "Open LDAP Public License v2.0.1",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.0.1"
                        },
                        new
                        {
                            Id = 266,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.1.html#licenseText",
                            Name = "Open LDAP Public License v2.1",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.1"
                        },
                        new
                        {
                            Id = 267,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.2.html#licenseText",
                            Name = "Open LDAP Public License v2.2",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.2"
                        },
                        new
                        {
                            Id = 268,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.2.1.html#licenseText",
                            Name = "Open LDAP Public License v2.2.1",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.2.1"
                        },
                        new
                        {
                            Id = 269,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.2.2.html#licenseText",
                            Name = "Open LDAP Public License 2.2.2",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.2.2"
                        },
                        new
                        {
                            Id = 270,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OLDAP-2.3.html#licenseText",
                            Name = "Open LDAP Public License v2.3",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.3"
                        },
                        new
                        {
                            Id = 271,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.4.html#licenseText",
                            Name = "Open LDAP Public License v2.4",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.4"
                        },
                        new
                        {
                            Id = 272,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.5.html#licenseText",
                            Name = "Open LDAP Public License v2.5",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.5"
                        },
                        new
                        {
                            Id = 273,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.6.html#licenseText",
                            Name = "Open LDAP Public License v2.6",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.6"
                        },
                        new
                        {
                            Id = 274,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OLDAP-2.7.html#licenseText",
                            Name = "Open LDAP Public License v2.7",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.7"
                        },
                        new
                        {
                            Id = 275,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OLDAP-2.8.html#licenseText",
                            Name = "Open LDAP Public License v2.8",
                            OsiApproved = false,
                            SPDX = "OLDAP-2.8"
                        },
                        new
                        {
                            Id = 276,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OML.html#licenseText",
                            Name = "Open Market License",
                            OsiApproved = false,
                            SPDX = "OML"
                        },
                        new
                        {
                            Id = 277,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OpenSSL.html#licenseText",
                            Name = "OpenSSL License",
                            OsiApproved = false,
                            SPDX = "OpenSSL"
                        },
                        new
                        {
                            Id = 278,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OPL-1.0.html#licenseText",
                            Name = "Open Public License v1.0",
                            OsiApproved = false,
                            SPDX = "OPL-1.0"
                        },
                        new
                        {
                            Id = 279,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/OSET-PL-2.1.html#licenseText",
                            Name = "OSET Public License version 2.1",
                            OsiApproved = true,
                            SPDX = "OSET-PL-2.1"
                        },
                        new
                        {
                            Id = 280,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OSL-1.0.html#licenseText",
                            Name = "Open Software License 1.0",
                            OsiApproved = true,
                            SPDX = "OSL-1.0"
                        },
                        new
                        {
                            Id = 281,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OSL-1.1.html#licenseText",
                            Name = "Open Software License 1.1",
                            OsiApproved = false,
                            SPDX = "OSL-1.1"
                        },
                        new
                        {
                            Id = 282,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OSL-2.0.html#licenseText",
                            Name = "Open Software License 2.0",
                            OsiApproved = true,
                            SPDX = "OSL-2.0"
                        },
                        new
                        {
                            Id = 283,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OSL-2.1.html#licenseText",
                            Name = "Open Software License 2.1",
                            OsiApproved = true,
                            SPDX = "OSL-2.1"
                        },
                        new
                        {
                            Id = 284,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/OSL-3.0.html#licenseText",
                            Name = "Open Software License 3.0",
                            OsiApproved = true,
                            SPDX = "OSL-3.0"
                        },
                        new
                        {
                            Id = 285,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/PDDL-1.0.html#licenseText",
                            Name = "ODC Public Domain Dedication & License 1.0",
                            OsiApproved = false,
                            SPDX = "PDDL-1.0"
                        },
                        new
                        {
                            Id = 286,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/PHP-3.0.html#licenseText",
                            Name = "PHP License v3.0",
                            OsiApproved = true,
                            SPDX = "PHP-3.0"
                        },
                        new
                        {
                            Id = 287,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/PHP-3.01.html#licenseText",
                            Name = "PHP License v3.01",
                            OsiApproved = false,
                            SPDX = "PHP-3.01"
                        },
                        new
                        {
                            Id = 288,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Plexus.html#licenseText",
                            Name = "Plexus Classworlds License",
                            OsiApproved = false,
                            SPDX = "Plexus"
                        },
                        new
                        {
                            Id = 289,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/PostgreSQL.html#licenseText",
                            Name = "PostgreSQL License",
                            OsiApproved = true,
                            SPDX = "PostgreSQL"
                        },
                        new
                        {
                            Id = 290,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/psfrag.html#licenseText",
                            Name = "psfrag License",
                            OsiApproved = false,
                            SPDX = "psfrag"
                        },
                        new
                        {
                            Id = 291,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/psutils.html#licenseText",
                            Name = "psutils License",
                            OsiApproved = false,
                            SPDX = "psutils"
                        },
                        new
                        {
                            Id = 292,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Python-2.0.html#licenseText",
                            Name = "Python License 2.0",
                            OsiApproved = true,
                            SPDX = "Python-2.0"
                        },
                        new
                        {
                            Id = 293,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Qhull.html#licenseText",
                            Name = "Qhull License",
                            OsiApproved = false,
                            SPDX = "Qhull"
                        },
                        new
                        {
                            Id = 294,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/QPL-1.0.html#licenseText",
                            Name = "Q Public License 1.0",
                            OsiApproved = true,
                            SPDX = "QPL-1.0"
                        },
                        new
                        {
                            Id = 295,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Rdisc.html#licenseText",
                            Name = "Rdisc License",
                            OsiApproved = false,
                            SPDX = "Rdisc"
                        },
                        new
                        {
                            Id = 296,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/RHeCos-1.1.html#licenseText",
                            Name = "Red Hat eCos Public License v1.1",
                            OsiApproved = false,
                            SPDX = "RHeCos-1.1"
                        },
                        new
                        {
                            Id = 297,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/RPL-1.1.html#licenseText",
                            Name = "Reciprocal Public License 1.1",
                            OsiApproved = true,
                            SPDX = "RPL-1.1"
                        },
                        new
                        {
                            Id = 298,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/RPL-1.5.html#licenseText",
                            Name = "Reciprocal Public License 1.5",
                            OsiApproved = true,
                            SPDX = "RPL-1.5"
                        },
                        new
                        {
                            Id = 299,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/RPSL-1.0.html#licenseText",
                            Name = "RealNetworks Public Source License v1.0",
                            OsiApproved = true,
                            SPDX = "RPSL-1.0"
                        },
                        new
                        {
                            Id = 300,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/RSA-MD.html#licenseText",
                            Name = "RSA Message-Digest License",
                            OsiApproved = false,
                            SPDX = "RSA-MD"
                        },
                        new
                        {
                            Id = 301,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/RSCPL.html#licenseText",
                            Name = "Ricoh Source Code Public License",
                            OsiApproved = true,
                            SPDX = "RSCPL"
                        },
                        new
                        {
                            Id = 302,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Ruby.html#licenseText",
                            Name = "Ruby License",
                            OsiApproved = false,
                            SPDX = "Ruby"
                        },
                        new
                        {
                            Id = 303,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SAX-PD.html#licenseText",
                            Name = "Sax Public Domain Notice",
                            OsiApproved = false,
                            SPDX = "SAX-PD"
                        },
                        new
                        {
                            Id = 304,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Saxpath.html#licenseText",
                            Name = "Saxpath License",
                            OsiApproved = false,
                            SPDX = "Saxpath"
                        },
                        new
                        {
                            Id = 305,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SCEA.html#licenseText",
                            Name = "SCEA Shared Source License",
                            OsiApproved = false,
                            SPDX = "SCEA"
                        },
                        new
                        {
                            Id = 306,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Sendmail.html#licenseText",
                            Name = "Sendmail License",
                            OsiApproved = false,
                            SPDX = "Sendmail"
                        },
                        new
                        {
                            Id = 307,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Sendmail-8.23.html#licenseText",
                            Name = "Sendmail License 8.23",
                            OsiApproved = false,
                            SPDX = "Sendmail-8.23"
                        },
                        new
                        {
                            Id = 308,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SGI-B-1.0.html#licenseText",
                            Name = "SGI Free Software License B v1.0",
                            OsiApproved = false,
                            SPDX = "SGI-B-1.0"
                        },
                        new
                        {
                            Id = 309,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SGI-B-1.1.html#licenseText",
                            Name = "SGI Free Software License B v1.1",
                            OsiApproved = false,
                            SPDX = "SGI-B-1.1"
                        },
                        new
                        {
                            Id = 310,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/SGI-B-2.0.html#licenseText",
                            Name = "SGI Free Software License B v2.0",
                            OsiApproved = false,
                            SPDX = "SGI-B-2.0"
                        },
                        new
                        {
                            Id = 311,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SimPL-2.0.html#licenseText",
                            Name = "Simple Public License 2.0",
                            OsiApproved = true,
                            SPDX = "SimPL-2.0"
                        },
                        new
                        {
                            Id = 312,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/SISSL.html#licenseText",
                            Name = "Sun Industry Standards Source License v1.1",
                            OsiApproved = true,
                            SPDX = "SISSL"
                        },
                        new
                        {
                            Id = 313,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SISSL-1.2.html#licenseText",
                            Name = "Sun Industry Standards Source License v1.2",
                            OsiApproved = false,
                            SPDX = "SISSL-1.2"
                        },
                        new
                        {
                            Id = 314,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Sleepycat.html#licenseText",
                            Name = "Sleepycat License",
                            OsiApproved = true,
                            SPDX = "Sleepycat"
                        },
                        new
                        {
                            Id = 315,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/SMLNJ.html#licenseText",
                            Name = "Standard ML of New Jersey License",
                            OsiApproved = false,
                            SPDX = "SMLNJ"
                        },
                        new
                        {
                            Id = 316,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SMPPL.html#licenseText",
                            Name = "Secure Messaging Protocol Public License",
                            OsiApproved = false,
                            SPDX = "SMPPL"
                        },
                        new
                        {
                            Id = 317,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SNIA.html#licenseText",
                            Name = "SNIA Public License 1.1",
                            OsiApproved = false,
                            SPDX = "SNIA"
                        },
                        new
                        {
                            Id = 318,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Spencer-86.html#licenseText",
                            Name = "Spencer License 86",
                            OsiApproved = false,
                            SPDX = "Spencer-86"
                        },
                        new
                        {
                            Id = 319,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Spencer-94.html#licenseText",
                            Name = "Spencer License 94",
                            OsiApproved = false,
                            SPDX = "Spencer-94"
                        },
                        new
                        {
                            Id = 320,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Spencer-99.html#licenseText",
                            Name = "Spencer License 99",
                            OsiApproved = false,
                            SPDX = "Spencer-99"
                        },
                        new
                        {
                            Id = 321,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/SPL-1.0.html#licenseText",
                            Name = "Sun Public License v1.0",
                            OsiApproved = true,
                            SPDX = "SPL-1.0"
                        },
                        new
                        {
                            Id = 322,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SugarCRM-1.1.3.html#licenseText",
                            Name = "SugarCRM Public License v1.1.3",
                            OsiApproved = false,
                            SPDX = "SugarCRM-1.1.3"
                        },
                        new
                        {
                            Id = 323,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/SWL.html#licenseText",
                            Name = "Scheme Widget Library (SWL) Software License Agreement",
                            OsiApproved = false,
                            SPDX = "SWL"
                        },
                        new
                        {
                            Id = 324,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/TAPR-OHL-1.0.html#licenseText",
                            Name = "TAPR Open Hardware License v1.0",
                            OsiApproved = false,
                            SPDX = "TAPR-OHL-1.0"
                        },
                        new
                        {
                            Id = 325,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/TCL.html#licenseText",
                            Name = "TCL/TK License",
                            OsiApproved = false,
                            SPDX = "TCL"
                        },
                        new
                        {
                            Id = 326,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/TCP-wrappers.html#licenseText",
                            Name = "TCP Wrappers License",
                            OsiApproved = false,
                            SPDX = "TCP-wrappers"
                        },
                        new
                        {
                            Id = 327,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/TMate.html#licenseText",
                            Name = "TMate Open Source License",
                            OsiApproved = false,
                            SPDX = "TMate"
                        },
                        new
                        {
                            Id = 328,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/TORQUE-1.1.html#licenseText",
                            Name = "TORQUE v2.5+ Software License v1.1",
                            OsiApproved = false,
                            SPDX = "TORQUE-1.1"
                        },
                        new
                        {
                            Id = 329,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/TOSL.html#licenseText",
                            Name = "Trusster Open Source License",
                            OsiApproved = false,
                            SPDX = "TOSL"
                        },
                        new
                        {
                            Id = 330,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/TU-Berlin-1.0.html#licenseText",
                            Name = "Technische Universitaet Berlin License 1.0",
                            OsiApproved = false,
                            SPDX = "TU-Berlin-1.0"
                        },
                        new
                        {
                            Id = 331,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/TU-Berlin-2.0.html#licenseText",
                            Name = "Technische Universitaet Berlin License 2.0",
                            OsiApproved = false,
                            SPDX = "TU-Berlin-2.0"
                        },
                        new
                        {
                            Id = 332,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Unicode-DFS-2015.html#licenseText",
                            Name = "Unicode License Agreement - Data Files and Software (2015)",
                            OsiApproved = false,
                            SPDX = "Unicode-DFS-2015"
                        },
                        new
                        {
                            Id = 333,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Unicode-DFS-2016.html#licenseText",
                            Name = "Unicode License Agreement - Data Files and Software (2016)",
                            OsiApproved = false,
                            SPDX = "Unicode-DFS-2016"
                        },
                        new
                        {
                            Id = 334,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Unicode-TOU.html#licenseText",
                            Name = "Unicode Terms of Use",
                            OsiApproved = false,
                            SPDX = "Unicode-TOU"
                        },
                        new
                        {
                            Id = 335,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Unlicense.html#licenseText",
                            Name = "The Unlicense",
                            OsiApproved = false,
                            SPDX = "Unlicense"
                        },
                        new
                        {
                            Id = 336,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/UPL-1.0.html#licenseText",
                            Name = "Universal Permissive License v1.0",
                            OsiApproved = true,
                            SPDX = "UPL-1.0"
                        },
                        new
                        {
                            Id = 337,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Vim.html#licenseText",
                            Name = "Vim License",
                            OsiApproved = false,
                            SPDX = "Vim"
                        },
                        new
                        {
                            Id = 338,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/VOSTROM.html#licenseText",
                            Name = "VOSTROM Public License for Open Source",
                            OsiApproved = false,
                            SPDX = "VOSTROM"
                        },
                        new
                        {
                            Id = 339,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/VSL-1.0.html#licenseText",
                            Name = "Vovida Software License v1.0",
                            OsiApproved = true,
                            SPDX = "VSL-1.0"
                        },
                        new
                        {
                            Id = 340,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/W3C.html#licenseText",
                            Name = "W3C Software Notice and License (2002-12-31)",
                            OsiApproved = true,
                            SPDX = "W3C"
                        },
                        new
                        {
                            Id = 341,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/W3C-19980720.html#licenseText",
                            Name = "W3C Software Notice and License (1998-07-20)",
                            OsiApproved = false,
                            SPDX = "W3C-19980720"
                        },
                        new
                        {
                            Id = 342,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/W3C-20150513.html#licenseText",
                            Name = "W3C Software Notice and Document License (2015-05-13)",
                            OsiApproved = false,
                            SPDX = "W3C-20150513"
                        },
                        new
                        {
                            Id = 343,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Watcom-1.0.html#licenseText",
                            Name = "Sybase Open Watcom Public License 1.0",
                            OsiApproved = true,
                            SPDX = "Watcom-1.0"
                        },
                        new
                        {
                            Id = 344,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Wsuipa.html#licenseText",
                            Name = "Wsuipa License",
                            OsiApproved = false,
                            SPDX = "Wsuipa"
                        },
                        new
                        {
                            Id = 345,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/WTFPL.html#licenseText",
                            Name = "Do What The F*ck You Want To Public License",
                            OsiApproved = false,
                            SPDX = "WTFPL"
                        },
                        new
                        {
                            Id = 346,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/X11.html#licenseText",
                            Name = "X11 License",
                            OsiApproved = false,
                            SPDX = "X11"
                        },
                        new
                        {
                            Id = 347,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Xerox.html#licenseText",
                            Name = "Xerox License",
                            OsiApproved = false,
                            SPDX = "Xerox"
                        },
                        new
                        {
                            Id = 348,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/XFree86-1.1.html#licenseText",
                            Name = "XFree86 License 1.1",
                            OsiApproved = false,
                            SPDX = "XFree86-1.1"
                        },
                        new
                        {
                            Id = 349,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/xinetd.html#licenseText",
                            Name = "xinetd License",
                            OsiApproved = false,
                            SPDX = "xinetd"
                        },
                        new
                        {
                            Id = 350,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Xnet.html#licenseText",
                            Name = "X.Net License",
                            OsiApproved = true,
                            SPDX = "Xnet"
                        },
                        new
                        {
                            Id = 351,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/xpp.html#licenseText",
                            Name = "XPP License",
                            OsiApproved = false,
                            SPDX = "xpp"
                        },
                        new
                        {
                            Id = 352,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/XSkat.html#licenseText",
                            Name = "XSkat License",
                            OsiApproved = false,
                            SPDX = "XSkat"
                        },
                        new
                        {
                            Id = 353,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/YPL-1.0.html#licenseText",
                            Name = "Yahoo! Public License v1.0",
                            OsiApproved = false,
                            SPDX = "YPL-1.0"
                        },
                        new
                        {
                            Id = 354,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/YPL-1.1.html#licenseText",
                            Name = "Yahoo! Public License v1.1",
                            OsiApproved = false,
                            SPDX = "YPL-1.1"
                        },
                        new
                        {
                            Id = 355,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Zed.html#licenseText",
                            Name = "Zed License",
                            OsiApproved = false,
                            SPDX = "Zed"
                        },
                        new
                        {
                            Id = 356,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Zend-2.0.html#licenseText",
                            Name = "Zend License v2.0",
                            OsiApproved = false,
                            SPDX = "Zend-2.0"
                        },
                        new
                        {
                            Id = 357,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Zimbra-1.3.html#licenseText",
                            Name = "Zimbra Public License v1.3",
                            OsiApproved = false,
                            SPDX = "Zimbra-1.3"
                        },
                        new
                        {
                            Id = 358,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/Zimbra-1.4.html#licenseText",
                            Name = "Zimbra Public License v1.4",
                            OsiApproved = false,
                            SPDX = "Zimbra-1.4"
                        },
                        new
                        {
                            Id = 359,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/Zlib.html#licenseText",
                            Name = "zlib License",
                            OsiApproved = true,
                            SPDX = "Zlib"
                        },
                        new
                        {
                            Id = 360,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/zlib-acknowledgement.html#licenseText",
                            Name = "zlib/libpng License with Acknowledgement",
                            OsiApproved = false,
                            SPDX = "zlib-acknowledgement"
                        },
                        new
                        {
                            Id = 361,
                            FsfApproved = false,
                            Link = "https://spdx.org/licenses/ZPL-1.1.html#licenseText",
                            Name = "Zope Public License 1.1",
                            OsiApproved = false,
                            SPDX = "ZPL-1.1"
                        },
                        new
                        {
                            Id = 362,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/ZPL-2.0.html#licenseText",
                            Name = "Zope Public License 2.0",
                            OsiApproved = true,
                            SPDX = "ZPL-2.0"
                        },
                        new
                        {
                            Id = 363,
                            FsfApproved = true,
                            Link = "https://spdx.org/licenses/ZPL-2.1.html#licenseText",
                            Name = "Zope Public License 2.1",
                            OsiApproved = false,
                            SPDX = "ZPL-2.1"
                        });
                });

            modelBuilder.Entity("Marechai.Database.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("browser")
                        .HasColumnType("char(128)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Date")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date")
                        .HasColumnType("char(20)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ip")
                        .HasColumnType("char(16)")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Referer")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("referer")
                        .HasColumnType("char(255)")
                        .HasDefaultValueSql("''");

                    b.HasKey("Id");

                    b.HasIndex("Browser")
                        .HasName("idx_log_browser");

                    b.HasIndex("Date")
                        .HasName("idx_log_date");

                    b.HasIndex("Ip")
                        .HasName("idx_log_ip");

                    b.HasIndex("Referer")
                        .HasName("idx_log_referer");

                    b.ToTable("log");
                });

            modelBuilder.Entity("Marechai.Database.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("company")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("FamilyId")
                        .HasColumnName("family")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Introduced")
                        .HasColumnName("introduced")
                        .HasColumnType("datetime");

                    b.Property<string>("Model")
                        .HasColumnName("model")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .HasName("idx_machines_company");

                    b.HasIndex("FamilyId")
                        .HasName("idx_machines_family");

                    b.HasIndex("Introduced")
                        .HasName("idx_machines_introduced");

                    b.HasIndex("Model")
                        .HasName("idx_machines_model");

                    b.HasIndex("Name")
                        .HasName("idx_machines_name");

                    b.HasIndex("Type")
                        .HasName("idx_machines_type");

                    b.ToTable("machines");
                });

            modelBuilder.Entity("Marechai.Database.Models.MachineFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("CompanyId")
                        .HasColumnName("company")
                        .HasColumnType("int(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .HasName("idx_machine_families_company");

                    b.HasIndex("Name")
                        .HasName("idx_machine_families_name");

                    b.ToTable("machine_families");
                });

            modelBuilder.Entity("Marechai.Database.Models.MachinePhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("CameraManufacturer");

                    b.Property<string>("CameraModel");

                    b.Property<ushort?>("ColorSpace");

                    b.Property<string>("Comments");

                    b.Property<ushort?>("Contrast");

                    b.Property<DateTime?>("CreationDate");

                    b.Property<double?>("DigitalZoomRatio");

                    b.Property<string>("ExifVersion");

                    b.Property<string>("Exposure");

                    b.Property<ushort?>("ExposureMethod");

                    b.Property<ushort?>("ExposureProgram");

                    b.Property<ushort?>("Flash");

                    b.Property<double?>("Focal");

                    b.Property<double?>("FocalLength");

                    b.Property<ushort?>("FocalLengthEquivalent");

                    b.Property<double?>("HorizontalResolution");

                    b.Property<ushort?>("IsoRating");

                    b.Property<string>("Lens");

                    b.Property<int>("LicenseId");

                    b.Property<ushort?>("LightSource");

                    b.Property<int>("MachineId");

                    b.Property<ushort?>("MeteringMode");

                    b.Property<ushort?>("Orientation");

                    b.Property<ushort?>("ResolutionUnit");

                    b.Property<ushort?>("Saturation");

                    b.Property<ushort?>("SceneCaptureType");

                    b.Property<ushort?>("SensingMethod");

                    b.Property<ushort?>("Sharpness");

                    b.Property<string>("SoftwareUsed");

                    b.Property<string>("Source");

                    b.Property<ushort?>("SubjectDistanceRange");

                    b.Property<DateTime>("UploadDate")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UserId");

                    b.Property<double?>("VerticalResolution");

                    b.Property<ushort?>("WhiteBalance");

                    b.HasKey("Id");

                    b.HasIndex("Author");

                    b.HasIndex("CameraManufacturer");

                    b.HasIndex("CameraModel");

                    b.HasIndex("ColorSpace");

                    b.HasIndex("Comments");

                    b.HasIndex("Contrast");

                    b.HasIndex("CreationDate");

                    b.HasIndex("DigitalZoomRatio");

                    b.HasIndex("ExifVersion");

                    b.HasIndex("Exposure");

                    b.HasIndex("ExposureMethod");

                    b.HasIndex("ExposureProgram");

                    b.HasIndex("Flash");

                    b.HasIndex("Focal");

                    b.HasIndex("FocalLength");

                    b.HasIndex("FocalLengthEquivalent");

                    b.HasIndex("HorizontalResolution");

                    b.HasIndex("IsoRating");

                    b.HasIndex("Lens");

                    b.HasIndex("LicenseId");

                    b.HasIndex("LightSource");

                    b.HasIndex("MachineId");

                    b.HasIndex("MeteringMode");

                    b.HasIndex("Orientation");

                    b.HasIndex("ResolutionUnit");

                    b.HasIndex("Saturation");

                    b.HasIndex("SceneCaptureType");

                    b.HasIndex("SensingMethod");

                    b.HasIndex("Sharpness");

                    b.HasIndex("SoftwareUsed");

                    b.HasIndex("SubjectDistanceRange");

                    b.HasIndex("UploadDate");

                    b.HasIndex("UserId");

                    b.HasIndex("VerticalResolution");

                    b.HasIndex("WhiteBalance");

                    b.ToTable("MachinePhotos");
                });

            modelBuilder.Entity("Marechai.Database.Models.MemoryByMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("MachineId")
                        .HasColumnName("machine")
                        .HasColumnType("int(11)");

                    b.Property<long?>("Size")
                        .HasColumnName("size")
                        .HasColumnType("bigint(20)");

                    b.Property<double?>("Speed")
                        .HasColumnName("speed");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("Usage")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("usage")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id");

                    b.HasIndex("MachineId")
                        .HasName("idx_memory_by_machine_machine");

                    b.HasIndex("Size")
                        .HasName("idx_memory_by_machine_size");

                    b.HasIndex("Speed")
                        .HasName("idx_memory_by_machine_speed");

                    b.HasIndex("Type")
                        .HasName("idx_memory_by_machine_type");

                    b.HasIndex("Usage")
                        .HasName("idx_memory_by_machine_usage");

                    b.ToTable("memory_by_machine");
                });

            modelBuilder.Entity("Marechai.Database.Models.MemoryByOwnedMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("OwnedMachineId");

                    b.Property<long>("Size");

                    b.Property<double>("Speed");

                    b.Property<int>("Type");

                    b.Property<int>("Usage");

                    b.HasKey("Id");

                    b.HasIndex("OwnedMachineId");

                    b.HasIndex("Size");

                    b.HasIndex("Speed");

                    b.HasIndex("Type");

                    b.HasIndex("Usage");

                    b.ToTable("MemoryByOwnedMachine");
                });

            modelBuilder.Entity("Marechai.Database.Models.MoneyDonation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Donator")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("donator")
                        .HasColumnType("char(128)")
                        .HasDefaultValueSql("''");

                    b.Property<decimal>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("quantity")
                        .HasColumnType("decimal(11,2)")
                        .HasDefaultValueSql("'0.00'");

                    b.HasKey("Id");

                    b.HasIndex("Donator")
                        .HasName("idx_money_donations_donator");

                    b.HasIndex("Quantity")
                        .HasName("idx_money_donations_quantity");

                    b.ToTable("money_donations");
                });

            modelBuilder.Entity("Marechai.Database.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("AddedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("added_id")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("datetime");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id");

                    b.HasIndex("AddedId")
                        .HasName("idx_news_ip");

                    b.HasIndex("Date")
                        .HasName("idx_news_date");

                    b.HasIndex("Type")
                        .HasName("idx_news_type");

                    b.ToTable("news");
                });

            modelBuilder.Entity("Marechai.Database.Models.OwnedMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AcquisitionDate");

                    b.Property<bool>("Boxed");

                    b.Property<DateTime?>("LastStatusDate");

                    b.Property<DateTime?>("LostDate");

                    b.Property<int>("MachineId");

                    b.Property<bool>("Manuals");

                    b.Property<string>("SerialNumber");

                    b.Property<bool>("SerialNumberVisible")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<int>("Status");

                    b.Property<bool>("Trade");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AcquisitionDate");

                    b.HasIndex("Boxed");

                    b.HasIndex("LastStatusDate");

                    b.HasIndex("LostDate");

                    b.HasIndex("MachineId");

                    b.HasIndex("Manuals");

                    b.HasIndex("SerialNumber");

                    b.HasIndex("SerialNumberVisible");

                    b.HasIndex("Status");

                    b.HasIndex("Trade");

                    b.HasIndex("UserId");

                    b.ToTable("OwnedMachines");
                });

            modelBuilder.Entity("Marechai.Database.Models.OwnedMachinePhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("CameraManufacturer");

                    b.Property<string>("CameraModel");

                    b.Property<ushort?>("ColorSpace");

                    b.Property<string>("Comments");

                    b.Property<ushort?>("Contrast");

                    b.Property<DateTime?>("CreationDate");

                    b.Property<double?>("DigitalZoomRatio");

                    b.Property<string>("ExifVersion");

                    b.Property<string>("Exposure");

                    b.Property<ushort?>("ExposureMethod");

                    b.Property<ushort?>("ExposureProgram");

                    b.Property<ushort?>("Flash");

                    b.Property<double?>("Focal");

                    b.Property<double?>("FocalLength");

                    b.Property<ushort?>("FocalLengthEquivalent");

                    b.Property<double?>("HorizontalResolution");

                    b.Property<ushort?>("IsoRating");

                    b.Property<string>("Lens");

                    b.Property<int>("LicenseId");

                    b.Property<ushort?>("LightSource");

                    b.Property<ushort?>("MeteringMode");

                    b.Property<ushort?>("Orientation");

                    b.Property<long>("OwnedMachineId");

                    b.Property<ushort?>("ResolutionUnit");

                    b.Property<ushort?>("Saturation");

                    b.Property<ushort?>("SceneCaptureType");

                    b.Property<ushort?>("SensingMethod");

                    b.Property<ushort?>("Sharpness");

                    b.Property<string>("SoftwareUsed");

                    b.Property<ushort?>("SubjectDistanceRange");

                    b.Property<DateTime>("UploadDate")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("UserId");

                    b.Property<double?>("VerticalResolution");

                    b.Property<ushort?>("WhiteBalance");

                    b.HasKey("Id");

                    b.HasIndex("Author");

                    b.HasIndex("CameraManufacturer");

                    b.HasIndex("CameraModel");

                    b.HasIndex("ColorSpace");

                    b.HasIndex("Comments");

                    b.HasIndex("Contrast");

                    b.HasIndex("CreationDate");

                    b.HasIndex("DigitalZoomRatio");

                    b.HasIndex("ExifVersion");

                    b.HasIndex("Exposure");

                    b.HasIndex("ExposureMethod");

                    b.HasIndex("ExposureProgram");

                    b.HasIndex("Flash");

                    b.HasIndex("Focal");

                    b.HasIndex("FocalLength");

                    b.HasIndex("FocalLengthEquivalent");

                    b.HasIndex("HorizontalResolution");

                    b.HasIndex("IsoRating");

                    b.HasIndex("Lens");

                    b.HasIndex("LicenseId");

                    b.HasIndex("LightSource");

                    b.HasIndex("MeteringMode");

                    b.HasIndex("Orientation");

                    b.HasIndex("OwnedMachineId");

                    b.HasIndex("ResolutionUnit");

                    b.HasIndex("Saturation");

                    b.HasIndex("SceneCaptureType");

                    b.HasIndex("SensingMethod");

                    b.HasIndex("Sharpness");

                    b.HasIndex("SoftwareUsed");

                    b.HasIndex("SubjectDistanceRange");

                    b.HasIndex("UploadDate");

                    b.HasIndex("UserId");

                    b.HasIndex("VerticalResolution");

                    b.HasIndex("WhiteBalance");

                    b.ToTable("OwnedMachinePhotos");
                });

            modelBuilder.Entity("Marechai.Database.Models.PeopleByCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CompanyId");

                    b.Property<DateTime?>("End");

                    b.Property<bool>("Ongoing");

                    b.Property<int>("PersonId");

                    b.Property<string>("Position");

                    b.Property<DateTime?>("Start");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("End");

                    b.HasIndex("PersonId");

                    b.HasIndex("Position");

                    b.HasIndex("Start");

                    b.ToTable("PeopleByCompany");
                });

            modelBuilder.Entity("Marechai.Database.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<short?>("CountryOfBirthId");

                    b.Property<DateTime?>("DeathDate");

                    b.Property<int?>("DocumentPersonId");

                    b.Property<string>("Facebook");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<Guid>("Photo");

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.Property<string>("Twitter");

                    b.Property<string>("Webpage");

                    b.HasKey("Id");

                    b.HasIndex("BirthDate");

                    b.HasIndex("CountryOfBirthId");

                    b.HasIndex("DeathDate");

                    b.HasIndex("Facebook");

                    b.HasIndex("Name");

                    b.HasIndex("Photo");

                    b.HasIndex("Surname");

                    b.HasIndex("Twitter");

                    b.HasIndex("Webpage");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Marechai.Database.Models.Processor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("AddrBus")
                        .HasColumnName("addr_bus")
                        .HasColumnType("int(11)");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("company")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Cores")
                        .HasColumnName("cores")
                        .HasColumnType("int(11)");

                    b.Property<int?>("DataBus")
                        .HasColumnName("data_bus")
                        .HasColumnType("int(11)");

                    b.Property<float?>("DieSize")
                        .HasColumnName("die_size");

                    b.Property<int?>("FprSize")
                        .HasColumnName("FPR_size")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Fprs")
                        .HasColumnName("FPRs")
                        .HasColumnType("int(11)");

                    b.Property<int?>("GprSize")
                        .HasColumnName("GPR_size")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Gprs")
                        .HasColumnName("GPRs")
                        .HasColumnType("int(11)");

                    b.Property<int?>("InstructionSetId")
                        .HasColumnName("instruction_set")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Introduced")
                        .HasColumnName("introduced")
                        .HasColumnType("datetime");

                    b.Property<float?>("L1Data")
                        .HasColumnName("L1_data");

                    b.Property<float?>("L1Instruction")
                        .HasColumnName("L1_instruction");

                    b.Property<float?>("L2");

                    b.Property<float?>("L3");

                    b.Property<string>("ModelCode")
                        .HasColumnName("model_code")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("char(50)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(50);

                    b.Property<string>("Package")
                        .HasColumnName("package")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Process")
                        .HasColumnName("process")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<float?>("ProcessNm")
                        .HasColumnName("process_nm");

                    b.Property<int?>("SimdRegisters")
                        .HasColumnName("SIMD_registers")
                        .HasColumnType("int(11)");

                    b.Property<int?>("SimdSize")
                        .HasColumnName("SIMD_size")
                        .HasColumnType("int(11)");

                    b.Property<double?>("Speed")
                        .HasColumnName("speed");

                    b.Property<int?>("ThreadsPerCore")
                        .HasColumnName("threads_per_core")
                        .HasColumnType("int(11)");

                    b.Property<long?>("Transistors")
                        .HasColumnName("transistors")
                        .HasColumnType("bigint(20)");

                    b.HasKey("Id");

                    b.HasIndex("AddrBus")
                        .HasName("idx_processors_addr_bus");

                    b.HasIndex("CompanyId")
                        .HasName("idx_processors_company");

                    b.HasIndex("Cores")
                        .HasName("idx_processors_cores");

                    b.HasIndex("DataBus")
                        .HasName("idx_processors_data_bus");

                    b.HasIndex("DieSize")
                        .HasName("idx_processors_die_size");

                    b.HasIndex("FprSize")
                        .HasName("idx_processors_FPR_size");

                    b.HasIndex("Fprs")
                        .HasName("idx_processors_FPRs");

                    b.HasIndex("GprSize")
                        .HasName("idx_processors_GPR_size");

                    b.HasIndex("Gprs")
                        .HasName("idx_processors_GPRs");

                    b.HasIndex("InstructionSetId")
                        .HasName("idx_processors_instruction_set");

                    b.HasIndex("Introduced")
                        .HasName("idx_processors_introduced");

                    b.HasIndex("L1Data")
                        .HasName("idx_processors_L1_data");

                    b.HasIndex("L1Instruction")
                        .HasName("idx_processors_L1_instruction");

                    b.HasIndex("L2")
                        .HasName("idx_processors_L2");

                    b.HasIndex("L3")
                        .HasName("idx_processors_L3");

                    b.HasIndex("ModelCode")
                        .HasName("idx_processors_model_code");

                    b.HasIndex("Name")
                        .HasName("idx_processors_name");

                    b.HasIndex("Package")
                        .HasName("idx_processors_package");

                    b.HasIndex("Process")
                        .HasName("idx_processors_process");

                    b.HasIndex("ProcessNm")
                        .HasName("idx_processors_process_nm");

                    b.HasIndex("SimdRegisters")
                        .HasName("idx_processors_SIMD_registers");

                    b.HasIndex("SimdSize")
                        .HasName("idx_processors_SIMD_size");

                    b.HasIndex("Speed")
                        .HasName("idx_processors_speed");

                    b.HasIndex("ThreadsPerCore")
                        .HasName("idx_processors_threads_per_core");

                    b.HasIndex("Transistors")
                        .HasName("idx_processors_transistors");

                    b.ToTable("processors");
                });

            modelBuilder.Entity("Marechai.Database.Models.ProcessorsByMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("MachineId")
                        .HasColumnName("machine")
                        .HasColumnType("int(11)");

                    b.Property<int>("ProcessorId")
                        .HasColumnName("processor")
                        .HasColumnType("int(11)");

                    b.Property<float?>("Speed")
                        .HasColumnName("speed");

                    b.HasKey("Id");

                    b.HasIndex("MachineId")
                        .HasName("idx_processors_by_machine_machine");

                    b.HasIndex("ProcessorId")
                        .HasName("idx_processors_by_machine_processor");

                    b.HasIndex("Speed")
                        .HasName("idx_processors_by_machine_speed");

                    b.ToTable("processors_by_machine");
                });

            modelBuilder.Entity("Marechai.Database.Models.ProcessorsByOwnedMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("OwnedMachineId");

                    b.Property<int>("ProcessorId");

                    b.Property<float>("Speed");

                    b.HasKey("Id");

                    b.HasIndex("OwnedMachineId");

                    b.HasIndex("ProcessorId");

                    b.HasIndex("Speed");

                    b.ToTable("ProcessorsByOwnedMachine");
                });

            modelBuilder.Entity("Marechai.Database.Models.Resolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Chars")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("chars")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("Colors")
                        .HasColumnName("colors")
                        .HasColumnType("bigint(20)");

                    b.Property<bool>("Grayscale");

                    b.Property<int>("Height")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("height")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<long?>("Palette")
                        .HasColumnName("palette")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Width")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("width")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id");

                    b.HasIndex("Colors")
                        .HasName("idx_resolutions_colors");

                    b.HasIndex("Height")
                        .HasName("idx_resolutions_height");

                    b.HasIndex("Palette")
                        .HasName("idx_resolutions_palette");

                    b.HasIndex("Width")
                        .HasName("idx_resolutions_width");

                    b.HasIndex("Width", "Height")
                        .HasName("idx_resolutions_resolution");

                    b.HasIndex("Width", "Height", "Colors")
                        .HasName("idx_resolutions_resolution_with_color");

                    b.HasIndex("Width", "Height", "Colors", "Palette")
                        .HasName("idx_resolutions_resolution_with_color_and_palette");

                    b.ToTable("resolutions");
                });

            modelBuilder.Entity("Marechai.Database.Models.ResolutionsByGpu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("GpuId")
                        .HasColumnName("gpu")
                        .HasColumnType("int(11)");

                    b.Property<int>("ResolutionId")
                        .HasColumnName("resolution")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("GpuId")
                        .HasName("idx_resolutions_by_gpu_gpu");

                    b.HasIndex("ResolutionId")
                        .HasName("idx_resolutions_by_gpu_resolution");

                    b.ToTable("resolutions_by_gpu");
                });

            modelBuilder.Entity("Marechai.Database.Models.ResolutionsByScreen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ResolutionId");

                    b.Property<int>("ScreenId");

                    b.HasKey("Id");

                    b.HasIndex("ResolutionId");

                    b.HasIndex("ScreenId");

                    b.ToTable("ResolutionsByScreen");
                });

            modelBuilder.Entity("Marechai.Database.Models.Screen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Diagonal");

                    b.Property<long?>("EffectiveColors");

                    b.Property<double?>("Height");

                    b.Property<int>("NativeResolutionId");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.Property<double?>("Width");

                    b.HasKey("Id");

                    b.HasIndex("Diagonal");

                    b.HasIndex("EffectiveColors");

                    b.HasIndex("Height");

                    b.HasIndex("NativeResolutionId");

                    b.HasIndex("Type");

                    b.HasIndex("Width");

                    b.ToTable("Screens");
                });

            modelBuilder.Entity("Marechai.Database.Models.ScreensByMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MachineId");

                    b.Property<int>("ScreenId");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("ScreenId");

                    b.ToTable("ScreensByMachine");
                });

            modelBuilder.Entity("Marechai.Database.Models.SoundByMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("MachineId")
                        .HasColumnName("machine")
                        .HasColumnType("int(11)");

                    b.Property<int>("SoundSynthId")
                        .HasColumnName("sound_synth")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("MachineId")
                        .HasName("idx_sound_by_machine_machine");

                    b.HasIndex("SoundSynthId")
                        .HasName("idx_sound_by_machine_sound_synth");

                    b.ToTable("sound_by_machine");
                });

            modelBuilder.Entity("Marechai.Database.Models.SoundByOwnedMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("OwnedMachineId");

                    b.Property<int>("SoundSynthId");

                    b.HasKey("Id");

                    b.HasIndex("OwnedMachineId");

                    b.HasIndex("SoundSynthId");

                    b.ToTable("SoundByOwnedMachine");
                });

            modelBuilder.Entity("Marechai.Database.Models.SoundSynth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("CompanyId")
                        .HasColumnName("company")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Depth")
                        .HasColumnName("depth")
                        .HasColumnType("int(11)");

                    b.Property<double?>("Frequency")
                        .HasColumnName("frequency");

                    b.Property<DateTime?>("Introduced")
                        .HasColumnName("introduced")
                        .HasColumnType("datetime");

                    b.Property<string>("ModelCode")
                        .HasColumnName("model_code")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("name")
                        .HasColumnType("char(50)")
                        .HasDefaultValueSql("''")
                        .HasMaxLength(50);

                    b.Property<int?>("SquareWave")
                        .HasColumnName("square_wave")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Type")
                        .HasColumnName("type")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Voices")
                        .HasColumnName("voices")
                        .HasColumnType("int(11)");

                    b.Property<int?>("WhiteNoise")
                        .HasColumnName("white_noise")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .HasName("idx_sound_synths_company");

                    b.HasIndex("Depth")
                        .HasName("idx_sound_synths_depth");

                    b.HasIndex("Frequency")
                        .HasName("idx_sound_synths_frequency");

                    b.HasIndex("Introduced")
                        .HasName("idx_sound_synths_introduced");

                    b.HasIndex("ModelCode")
                        .HasName("idx_sound_synths_model_code");

                    b.HasIndex("Name")
                        .HasName("idx_sound_synths_name");

                    b.HasIndex("SquareWave")
                        .HasName("idx_sound_synths_square_wave");

                    b.HasIndex("Type")
                        .HasName("idx_sound_synths_type");

                    b.HasIndex("Voices")
                        .HasName("idx_sound_synths_voices");

                    b.HasIndex("WhiteNoise")
                        .HasName("idx_sound_synths_white_noise");

                    b.ToTable("sound_synths");
                });

            modelBuilder.Entity("Marechai.Database.Models.StorageByMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("Capacity")
                        .HasColumnName("capacity")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Interface")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("interface")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("MachineId")
                        .HasColumnName("machine")
                        .HasColumnType("int(11)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id");

                    b.HasIndex("Capacity")
                        .HasName("idx_storage_capacity");

                    b.HasIndex("Interface")
                        .HasName("idx_storage_interface");

                    b.HasIndex("MachineId")
                        .HasName("idx_storage_machine");

                    b.HasIndex("Type")
                        .HasName("idx_storage_type");

                    b.ToTable("storage_by_machine");
                });

            modelBuilder.Entity("Marechai.Database.Models.StorageByOwnedMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Capacity");

                    b.Property<int>("Interface");

                    b.Property<long>("OwnedMachineId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("Capacity");

                    b.HasIndex("Interface");

                    b.HasIndex("OwnedMachineId");

                    b.HasIndex("Type");

                    b.ToTable("StorageByOwnedMachine");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Marechai.Database.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Marechai.Database.Models.Company", b =>
                {
                    b.HasOne("Marechai.Database.Models.Iso31661Numeric", "Country")
                        .WithMany("Companies")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("fk_companies_country");

                    b.HasOne("Marechai.Database.Models.Company", "SoldTo")
                        .WithMany("InverseSoldToNavigation")
                        .HasForeignKey("SoldToId")
                        .HasConstraintName("fk_companies_sold_to");
                });

            modelBuilder.Entity("Marechai.Database.Models.CompanyDescription", b =>
                {
                    b.HasOne("Marechai.Database.Models.Company", "Company")
                        .WithMany("Descriptions")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.CompanyLogo", b =>
                {
                    b.HasOne("Marechai.Database.Models.Company", "Company")
                        .WithMany("Logos")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_company_logos_company1");
                });

            modelBuilder.Entity("Marechai.Database.Models.Document", b =>
                {
                    b.HasOne("Marechai.Database.Models.Iso31661Numeric", "Country")
                        .WithMany("Documents")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("Marechai.Database.Models.DocumentPerson", b =>
                {
                    b.HasOne("Marechai.Database.Models.Person", "Person")
                        .WithOne("DocumentPerson")
                        .HasForeignKey("Marechai.Database.Models.DocumentPerson", "PersonId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Marechai.Database.Models.Gpu", b =>
                {
                    b.HasOne("Marechai.Database.Models.Company", "Company")
                        .WithMany("Gpus")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_gpus_company");
                });

            modelBuilder.Entity("Marechai.Database.Models.GpusByMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Gpu", "Gpu")
                        .WithMany("GpusByMachine")
                        .HasForeignKey("GpuId")
                        .HasConstraintName("fk_gpus_by_machine_gpu")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.Machine", "Machine")
                        .WithMany("Gpus")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("fk_gpus_by_machine_machine")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.GpusByOwnedMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Gpu", "Gpu")
                        .WithMany()
                        .HasForeignKey("GpuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.OwnedMachine", "OwnedMachine")
                        .WithMany("Gpus")
                        .HasForeignKey("OwnedMachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.InstructionSetExtensionsByProcessor", b =>
                {
                    b.HasOne("Marechai.Database.Models.InstructionSetExtension", "Extension")
                        .WithMany("InstructionSetExtensionsByProcessor")
                        .HasForeignKey("ExtensionId")
                        .HasConstraintName("fk_extension_extension_id");

                    b.HasOne("Marechai.Database.Models.Processor", "Processor")
                        .WithMany("InstructionSetExtensions")
                        .HasForeignKey("ProcessorId")
                        .HasConstraintName("fk_extension_processor_id");
                });

            modelBuilder.Entity("Marechai.Database.Models.Machine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Company", "Company")
                        .WithMany("Machines")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_machines_company");

                    b.HasOne("Marechai.Database.Models.MachineFamily", "Family")
                        .WithMany("Machines")
                        .HasForeignKey("FamilyId")
                        .HasConstraintName("fk_machines_family");
                });

            modelBuilder.Entity("Marechai.Database.Models.MachineFamily", b =>
                {
                    b.HasOne("Marechai.Database.Models.Company", "Company")
                        .WithMany("MachineFamilies")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_machine_families_company")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.MachinePhoto", b =>
                {
                    b.HasOne("Marechai.Database.Models.License", "License")
                        .WithMany("Photos")
                        .HasForeignKey("LicenseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.Machine", "Machine")
                        .WithMany("Photos")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.ApplicationUser", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Marechai.Database.Models.MemoryByMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Machine", "Machine")
                        .WithMany("Memory")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("fk_memory_by_machine_machine")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.MemoryByOwnedMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.OwnedMachine", "OwnedMachine")
                        .WithMany("Memory")
                        .HasForeignKey("OwnedMachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.OwnedMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.ApplicationUser", "User")
                        .WithMany("OwnedMachines")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.OwnedMachinePhoto", b =>
                {
                    b.HasOne("Marechai.Database.Models.License", "License")
                        .WithMany("OwnedMachinePhotos")
                        .HasForeignKey("LicenseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.OwnedMachine", "OwnedMachine")
                        .WithMany("Photos")
                        .HasForeignKey("OwnedMachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.ApplicationUser", "User")
                        .WithMany("OwnedMachinePhotos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.PeopleByCompany", b =>
                {
                    b.HasOne("Marechai.Database.Models.Company", "Company")
                        .WithMany("People")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.Person", "Person")
                        .WithMany("Companies")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.Person", b =>
                {
                    b.HasOne("Marechai.Database.Models.Iso31661Numeric", "CountryOfBirth")
                        .WithMany("People")
                        .HasForeignKey("CountryOfBirthId");
                });

            modelBuilder.Entity("Marechai.Database.Models.Processor", b =>
                {
                    b.HasOne("Marechai.Database.Models.Company", "Company")
                        .WithMany("Processors")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_processors_company");

                    b.HasOne("Marechai.Database.Models.InstructionSet", "InstructionSet")
                        .WithMany("Processors")
                        .HasForeignKey("InstructionSetId")
                        .HasConstraintName("fk_processors_instruction_set");
                });

            modelBuilder.Entity("Marechai.Database.Models.ProcessorsByMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Machine", "Machine")
                        .WithMany("Processors")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("fk_processors_by_machine_machine")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.Processor", "Processor")
                        .WithMany("ProcessorsByMachine")
                        .HasForeignKey("ProcessorId")
                        .HasConstraintName("fk_processors_by_machine_processor")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.ProcessorsByOwnedMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.OwnedMachine", "OwnedMachine")
                        .WithMany("Processors")
                        .HasForeignKey("OwnedMachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.Processor", "Processor")
                        .WithMany()
                        .HasForeignKey("ProcessorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.ResolutionsByGpu", b =>
                {
                    b.HasOne("Marechai.Database.Models.Gpu", "Gpu")
                        .WithMany("ResolutionsByGpu")
                        .HasForeignKey("GpuId")
                        .HasConstraintName("fk_resolutions_by_gpu_gpu")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.Resolution", "Resolution")
                        .WithMany("ResolutionsByGpu")
                        .HasForeignKey("ResolutionId")
                        .HasConstraintName("fk_resolutions_by_gpu_resolution")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.ResolutionsByScreen", b =>
                {
                    b.HasOne("Marechai.Database.Models.Resolution", "Resolution")
                        .WithMany("ResolutionsByScreen")
                        .HasForeignKey("ResolutionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.Screen", "Screen")
                        .WithMany("Resolutions")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.Screen", b =>
                {
                    b.HasOne("Marechai.Database.Models.Resolution", "NativeResolution")
                        .WithMany("Screens")
                        .HasForeignKey("NativeResolutionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.ScreensByMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Machine", "Machine")
                        .WithMany("Screens")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.Screen", "Screen")
                        .WithMany("ScreensByMachines")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.SoundByMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Machine", "Machine")
                        .WithMany("Sound")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("fk_sound_by_machine_machine")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.SoundSynth", "SoundSynth")
                        .WithMany("SoundByMachine")
                        .HasForeignKey("SoundSynthId")
                        .HasConstraintName("fk_sound_by_machine_sound_synth")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.SoundByOwnedMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.OwnedMachine", "OwnedMachine")
                        .WithMany("Sound")
                        .HasForeignKey("OwnedMachineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Marechai.Database.Models.SoundSynth", "SoundSynth")
                        .WithMany()
                        .HasForeignKey("SoundSynthId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.SoundSynth", b =>
                {
                    b.HasOne("Marechai.Database.Models.Company", "Company")
                        .WithMany("SoundSynths")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("fk_sound_synths_company");
                });

            modelBuilder.Entity("Marechai.Database.Models.StorageByMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.Machine", "Machine")
                        .WithMany("Storage")
                        .HasForeignKey("MachineId")
                        .HasConstraintName("fk_storage_by_machine_machine")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Marechai.Database.Models.StorageByOwnedMachine", b =>
                {
                    b.HasOne("Marechai.Database.Models.OwnedMachine", "OwnedMachine")
                        .WithMany("Storage")
                        .HasForeignKey("OwnedMachineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
